{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard_driver/view-current-rides/create-new-dialog/create-new-dialog.component.css","webpack:///./src/app/dashboard/dashboard_driver/view-current-rides/create-new-dialog/create-new-dialog.component.html","webpack:///./src/app/dashboard/dashboard_driver/view-current-rides/create-new-dialog/create-new-dialog.component.ts","webpack:///./src/app/dashboard/dashboard_driver/view-current-rides/delete-dialog/delete-dialog.component.css","webpack:///./src/app/dashboard/dashboard_driver/view-current-rides/delete-dialog/delete-dialog.component.html","webpack:///./src/app/dashboard/dashboard_driver/view-current-rides/delete-dialog/delete-dialog.component.ts","webpack:///./src/app/dashboard/dashboard_driver/view-current-rides/edit-dialog/edit-dialog.component.css","webpack:///./src/app/dashboard/dashboard_driver/view-current-rides/edit-dialog/edit-dialog.component.html","webpack:///./src/app/dashboard/dashboard_driver/view-current-rides/edit-dialog/edit-dialog.component.ts","webpack:///./src/app/dashboard/dashboard_driver/view-current-rides/view-current-rides.component.css","webpack:///./src/app/dashboard/dashboard_driver/view-current-rides/view-current-rides.component.html","webpack:///./src/app/dashboard/dashboard_driver/view-current-rides/view-current-rides.component.ts","webpack:///./src/app/dashboard/dashboard_passenger/search-active-rides/request-ride-dialog/request-ride-dialog.component.css","webpack:///./src/app/dashboard/dashboard_passenger/search-active-rides/request-ride-dialog/request-ride-dialog.component.html","webpack:///./src/app/dashboard/dashboard_passenger/search-active-rides/request-ride-dialog/request-ride-dialog.component.ts","webpack:///./src/app/dashboard/dashboard_passenger/search-active-rides/search-active-rides.component.css","webpack:///./src/app/dashboard/dashboard_passenger/search-active-rides/search-active-rides.component.html","webpack:///./src/app/dashboard/dashboard_passenger/search-active-rides/search-active-rides.component.ts","webpack:///./src/app/dashboard/dashboard_passenger/search-active-rides/stops-ride-dialog/stops-ride-dialog.component.css","webpack:///./src/app/dashboard/dashboard_passenger/search-active-rides/stops-ride-dialog/stops-ride-dialog.component.html","webpack:///./src/app/dashboard/dashboard_passenger/search-active-rides/stops-ride-dialog/stops-ride-dialog.component.ts","webpack:///./src/app/dashboard/notification-tabs/notification-ended-rides/notification-ended-rides.component.css","webpack:///./src/app/dashboard/notification-tabs/notification-ended-rides/notification-ended-rides.component.html","webpack:///./src/app/dashboard/notification-tabs/notification-ended-rides/notification-ended-rides.component.ts","webpack:///./src/app/dashboard/notification-tabs/notification-ended-rides/rate-dialog/rate-dialog.component.css","webpack:///./src/app/dashboard/notification-tabs/notification-ended-rides/rate-dialog/rate-dialog.component.html","webpack:///./src/app/dashboard/notification-tabs/notification-ended-rides/rate-dialog/rate-dialog.component.ts","webpack:///./src/app/dashboard/notification-tabs/notification-requests-driver/notification-requests-driver.component.css","webpack:///./src/app/dashboard/notification-tabs/notification-requests-driver/notification-requests-driver.component.html","webpack:///./src/app/dashboard/notification-tabs/notification-requests-driver/notification-requests-driver.component.ts","webpack:///./src/app/dashboard/notification-tabs/notification-requests/notification-requests.component.css","webpack:///./src/app/dashboard/notification-tabs/notification-requests/notification-requests.component.html","webpack:///./src/app/dashboard/notification-tabs/notification-requests/notification-requests.component.ts","webpack:///./src/app/dashboard/notification-tabs/notification-tabs.component.css","webpack:///./src/app/dashboard/notification-tabs/notification-tabs.component.html","webpack:///./src/app/dashboard/notification-tabs/notification-tabs.component.ts","webpack:///./src/app/dashboard/profile/edit-profile/edit-profile.component.css","webpack:///./src/app/dashboard/profile/edit-profile/edit-profile.component.html","webpack:///./src/app/dashboard/profile/edit-profile/edit-profile.component.ts","webpack:///./src/app/dashboard/profile/profile.component.css","webpack:///./src/app/dashboard/profile/profile.component.html","webpack:///./src/app/dashboard/profile/profile.component.ts","webpack:///./src/app/dashboard/view-passengers-ride-dialog/view-passengers-ride-dialog.component.css","webpack:///./src/app/dashboard/view-passengers-ride-dialog/view-passengers-ride-dialog.component.html","webpack:///./src/app/dashboard/view-passengers-ride-dialog/view-passengers-ride-dialog.component.ts","webpack:///./src/app/frontpage/login/login.component.css","webpack:///./src/app/frontpage/login/login.component.html","webpack:///./src/app/frontpage/login/login.component.ts","webpack:///./src/app/frontpage/signup/signup.component.css","webpack:///./src/app/frontpage/signup/signup.component.html","webpack:///./src/app/frontpage/signup/signup.component.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/routing.module.ts","webpack:///./src/app/services/drive_rides.service.ts","webpack:///./src/app/services/notification.service.ts","webpack:///./src/app/services/reputation.service.ts","webpack:///./src/app/services/users.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"/* #container {\\n    display: flex; \\n    flex-direction: row;\\n    justify-content: flex-start;\\n    align-items: center;}\\n.child {\\n    width: 200px;\\n    height: 200px; }\\n#child1 {\\n    background-color: red; }\\n#child2 {\\n    background-color: green; }\\n#child3 {\\n    background-color: blue; } */\\n\\nmat-sidenav-container, mat-sidenav-content, mat-sidenav {\\n    height: 100%;\\n}\\n\\nmat-sidenav {\\n    width: 250px;\\n}\\n\\na {\\n    color:white;\\n    text-decoration: none;\\n}\\n\\na:hover, a:active {\\n    color: lightgray;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Z0NBYWdDOztBQUVoQztJQUNJLGFBQWE7Q0FDaEI7O0FBQ0Q7SUFDSSxhQUFhO0NBQ2hCOztBQUVEO0lBQ0ksWUFBWTtJQUNaLHNCQUFzQjtDQUN6Qjs7QUFDRDtJQUNJLGlCQUFpQjtDQUNwQiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogI2NvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDsgXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjt9XG4uY2hpbGQge1xuICAgIHdpZHRoOiAyMDBweDtcbiAgICBoZWlnaHQ6IDIwMHB4OyB9XG4jY2hpbGQxIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7IH1cbiNjaGlsZDIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGdyZWVuOyB9XG4jY2hpbGQzIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibHVlOyB9ICovXG5cbm1hdC1zaWRlbmF2LWNvbnRhaW5lciwgbWF0LXNpZGVuYXYtY29udGVudCwgbWF0LXNpZGVuYXYge1xuICAgIGhlaWdodDogMTAwJTtcbn1cbm1hdC1zaWRlbmF2IHtcbiAgICB3aWR0aDogMjUwcHg7XG59XG5cbmEge1xuICAgIGNvbG9yOndoaXRlO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cbmE6aG92ZXIsIGE6YWN0aXZlIHtcbiAgICBjb2xvcjogbGlnaHRncmF5O1xufSJdfQ== */\"","module.exports = \"\\n<mat-sidenav-container>\\n\\n      <mat-sidenav #sidenav opened=\\\"false\\\" >\\n          <mat-nav-list>\\n            <a *ngIf=\\\"loggedIn\\\" mat-list-item routerLink=\\\"/notifications\\\" (click)=\\\"sidenav.close()\\\">\\n              <mat-icon>notification_important</mat-icon>\\n              Notifications\\n            </a>\\n            <a *ngIf=\\\"loggedIn && this.userService.getCurrenSession().acc_type == 'passenger'\\\" mat-list-item routerLink=\\\"/search-active-rides\\\" (click)=\\\"sidenav.close()\\\">\\n              <mat-icon>directions_car</mat-icon>\\n              Search Active Rides\\n            </a>\\n            <a *ngIf=\\\"loggedIn && this.userService.getCurrenSession().acc_type == 'driver'\\\" mat-list-item routerLink=\\\"/view-current-rides\\\" (click)=\\\"sidenav.close()\\\">\\n              <mat-icon>directions_car</mat-icon>\\n              View Current Rides\\n            </a>\\n            <a *ngIf=\\\"loggedIn\\\" mat-list-item routerLink=\\\"profile\\\" (click)=\\\"myProfile(); sidenav.close()\\\">\\n              <mat-icon>person</mat-icon>\\n              My Profile\\n            </a>\\n            <a *ngIf=\\\"loggedIn\\\" mat-list-item routerLink=\\\"/\\\" (click)=\\\"sidenav.close(); signOut()\\\">\\n              <mat-icon>exit_to_app</mat-icon>\\n              Sing out\\n            </a>\\n          </mat-nav-list>\\n        </mat-sidenav>\\n        <mat-sidenav-content>\\n          <mat-toolbar color=\\\"primary\\\" *ngIf=\\\"loggedIn\\\">\\n              <div fxHide.gt-xs>\\n                <button mat-raised-button color=\\\"accent\\\" (click)=\\\"sidenav.toggle()\\\">\\n                  <mat-icon>menu</mat-icon>\\n                </button>\\n              </div>\\n              \\n              <div fxFlex fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"15px\\\" fxHide.xs>\\n      \\n                <a  routerLink=\\\"/notifications\\\">Notifications</a>\\n                <a  *ngIf=\\\"this.userService.getCurrenSession().acc_type == 'driver'\\\" routerLink=\\\"//view-current-rides\\\" >View Current Rides</a>\\n                <a  *ngIf=\\\"this.userService.getCurrenSession().acc_type == 'passenger'\\\" routerLink=\\\"/search-active-rides\\\">Search Active Rides</a>\\n                <div  [matMenuTriggerFor]=\\\"menu\\\" >\\n                  <a href=\\\"javascript:;\\\" fxLayoutAlign=\\\"center center\\\">\\n                      {{this.userService.getCurrenSession().contact_email}}\\n                  <mat-icon>expand_more</mat-icon>\\n                  </a>\\n                </div>\\n                <mat-menu #menu=\\\"matMenu\\\">\\n                  <button mat-menu-item routerLink=\\\"/profile\\\" (click)=\\\"myProfile()\\\">My Profile</button>\\n                  <button mat-menu-item routerLink=\\\"/\\\" (click)=\\\"signOut()\\\">Sign Out</button>\\n                </mat-menu>\\n              </div>\\n          </mat-toolbar>\\n \\n   <router-outlet></router-outlet>\\n  </mat-sidenav-content>\\n    \\n  </mat-sidenav-container>\\n\\n\\n\\n\\n\"","import { Component } from '@angular/core';\nimport { UsersService } from './services/users.service';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'angular-carpol';\n  loggedIn : boolean = false;\n\n  constructor(private userService : UsersService, private router: Router,){}\n\n  setLoggedIn( value : boolean){\n    this.loggedIn = value;\n  }\n  \n  signOut(){\n    this.loggedIn = false;\n  }\n  myProfile(){\n    this.router.navigateByUrl('/', {skipLocationChange: true}).then(()=>\n    this.router.navigate([\"/profile\"]));\n  }\n  \n\n\n}\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { AppComponent } from './app.component';\n\nimport { MaterialModule } from './material.module';\nimport { RoutingModule } from './routing.module';\nimport { FormsModule } from '@angular/forms';\n\nimport { LoginComponent } from './frontpage/login/login.component';\nimport { SignupComponent } from './frontpage/signup/signup.component';\n\n\nimport { ProfileComponent } from './dashboard/profile/profile.component';\n\nimport { UsersService } from './services/users.service';\nimport { NotificationsService } from './services/notification.service';\nimport { ReputationService } from './services/reputation.service';\nimport { DriveRidesService } from './services/drive_rides.service';\nimport { EditProfileComponent } from './dashboard/profile/edit-profile/edit-profile.component';\nimport { ViewCurrentRidesComponent } from './dashboard/dashboard_driver/view-current-rides/view-current-rides.component';\nimport { EditDialogComponent } from './dashboard/dashboard_driver/view-current-rides/edit-dialog/edit-dialog.component';\nimport { CreateNewDialogComponent } from './dashboard/dashboard_driver/view-current-rides/create-new-dialog/create-new-dialog.component';\nimport { DeleteDialogComponent } from './dashboard/dashboard_driver/view-current-rides/delete-dialog/delete-dialog.component';\nimport { SearchActiveRidesComponent } from './dashboard/dashboard_passenger/search-active-rides/search-active-rides.component';\nimport { ViewPassengersRideDialogComponent } from './dashboard/view-passengers-ride-dialog/view-passengers-ride-dialog.component';\nimport { RequestRideDialogComponent } from './dashboard/dashboard_passenger/search-active-rides/request-ride-dialog/request-ride-dialog.component';\nimport { StopsRideDialogComponent } from './dashboard/dashboard_passenger/search-active-rides/stops-ride-dialog/stops-ride-dialog.component';\nimport { NotificationTabsComponent } from './dashboard/notification-tabs/notification-tabs.component';\nimport { NotificationRequestsComponent } from './dashboard/notification-tabs/notification-requests/notification-requests.component';\nimport { NotificationEndedRidesComponent } from './dashboard/notification-tabs/notification-ended-rides/notification-ended-rides.component';\nimport { NotificationRequestsDriverComponent } from './dashboard/notification-tabs/notification-requests-driver/notification-requests-driver.component';\nimport { RateDialogComponent } from './dashboard/notification-tabs/notification-ended-rides/rate-dialog/rate-dialog.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignupComponent,\n    ProfileComponent,\n    EditProfileComponent,\n    ViewCurrentRidesComponent,\n    EditDialogComponent,\n    CreateNewDialogComponent,\n    DeleteDialogComponent,\n    SearchActiveRidesComponent,\n    ViewPassengersRideDialogComponent,\n    RequestRideDialogComponent,\n    StopsRideDialogComponent,\n    NotificationTabsComponent,\n    NotificationRequestsComponent,\n    NotificationEndedRidesComponent,\n    NotificationRequestsDriverComponent,\n    RateDialogComponent\n  ],\n  imports: [\n    BrowserModule, \n    MaterialModule, \n    RoutingModule,\n    BrowserAnimationsModule, \n    FlexLayoutModule,\n    FormsModule,\n  ],\n  providers: [UsersService, ReputationService, DriveRidesService, NotificationsService],\n  bootstrap: [AppComponent],\n  entryComponents : [\n    EditProfileComponent,\n    CreateNewDialogComponent, \n    DeleteDialogComponent, \n    EditDialogComponent,\n    ViewPassengersRideDialogComponent,\n    RequestRideDialogComponent,\n    StopsRideDialogComponent,\n    RateDialogComponent\n  ] \n})\n\n\nexport class AppModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmRfZHJpdmVyL3ZpZXctY3VycmVudC1yaWRlcy9jcmVhdGUtbmV3LWRpYWxvZy9jcmVhdGUtbmV3LWRpYWxvZy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-dialog-content>\\n<section>\\n    <h1 fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\"  fxLayoutAlign=\\\"center center\\\">Create New Ride!</h1>\\n\\n    <form fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\"\\n    #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\">\\n\\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n    <mat-form-field>\\n        <input type=\\\"text\\\"  pattern=\\\"[A-Za-z0-9]{2,20}\\\" matInput placeholder=\\\"Ride Name\\\" ngModel name=\\\"rideName\\\" required #rideNameInput=\\\"ngModel\\\" > \\n        <mat-error *ngIf=\\\"rideNameInput.hasError('required')\\\">Please write ride name</mat-error>\\n        <mat-error *ngIf=\\\"!rideNameInput.hasError('required')\\\">Ride name should contain only letters and numbers with 2-20 characters</mat-error>\\n      </mat-form-field>\\n      \\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n<mat-form-field>\\n    <input type=\\\"text\\\"  pattern=\\\"[A-Za-z0-9 ]{2,30}\\\" matInput placeholder=\\\"Start Location\\\" ngModel name=\\\"startLocation\\\" required #startLocationInput=\\\"ngModel\\\" > \\n    <mat-error *ngIf=\\\"startLocationInput.hasError('required')\\\">Please write start location</mat-error>\\n    <mat-error *ngIf=\\\"!startLocationInput.hasError('required')\\\">Start Location should contain only letters and numbers with 2-30 characters</mat-error>\\n  </mat-form-field>\\n\\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n<mat-form-field>\\n    <input type=\\\"text\\\" pattern=\\\"[A-Za-z0-9 ]{2,30}\\\" matInput placeholder=\\\"End Location\\\" ngModel name=\\\"EndLocation\\\" required #endLocationInput=\\\"ngModel\\\" > \\n    <mat-error *ngIf=\\\"endLocationInput.hasError('required')\\\">Please write end location</mat-error>\\n    <mat-error *ngIf=\\\"!endLocationInput.hasError('required')\\\">End Location should contain only letters and numbers with 2-30 characters</mat-error>\\n  </mat-form-field>\\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\">\\n    <mat-form-field>\\n        <input type=\\\"text\\\" pattern=\\\"[0-9]{2}:[0-9]{2}\\\" matInput placeholder=\\\"Start Time\\\" ngModel name=\\\"startTime\\\" required #startTimeInput=\\\"ngModel\\\" > \\n        <mat-error *ngIf=\\\"startTimeInput.hasError('required')\\\">Please write start time</mat-error>\\n        <mat-error *ngIf=\\\"!startTimeInput.hasError('required')\\\">Start time should be like an example : 11:33</mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field>\\n          <input type=\\\"text\\\" pattern=\\\"[0-9]{2}:[0-9]{2}\\\" matInput placeholder=\\\"End Time\\\" ngModel name=\\\"endTime\\\" required #endTimeInput=\\\"ngModel\\\" > \\n          <mat-error *ngIf=\\\"endTimeInput.hasError('required')\\\">Please write end time</mat-error>\\n          <mat-error *ngIf=\\\"!endTimeInput.hasError('required')\\\">End time should be like an example : 11:33</mat-error>\\n        </mat-form-field>\\n\\n</div>\\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n\\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n<mat-form-field>\\n    <input type=\\\"text\\\" pattern=\\\"[0-9]{1,2}\\\" matInput placeholder=\\\"Passanger Limit\\\" ngModel name=\\\"passangerLimit\\\" required #passangerLimitInput=\\\"ngModel\\\" > \\n    <mat-error *ngIf=\\\"passangerLimitInput.hasError('required')\\\">Please write Passanger Limit</mat-error>\\n    <mat-error *ngIf=\\\"!passangerLimitInput.hasError('required')\\\">Passanger Limit needs to be between 0-99</mat-error>\\n  </mat-form-field>\\n\\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n<mat-form-field>\\n        <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\" #datepickerInput=\\\"ngModel\\\" ngModel required name=\\\"dateFiled\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker></mat-datepicker>  \\n        <mat-error *ngIf=\\\"datepickerInput.hasError('required')\\\">Choose Date</mat-error>\\n        <mat-error *ngIf=\\\"!datepickerInput.hasError('required')\\\">Please choose a date!</mat-error>   \\n  </mat-form-field>\\n\\n\\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n<mat-form-field>\\n    <input type=\\\"text\\\" pattern=\\\"[A-Za-z0-9,]{10,100}\\\" matInput placeholder=\\\"Write stops: divade them with comma\\\" ngModel name=\\\"stops\\\" required #stopsInput=\\\"ngModel\\\" > \\n    <mat-error *ngIf=\\\"stopsInput.hasError('required')\\\">Please write stops</mat-error>\\n    <mat-error *ngIf=\\\"!stopsInput.hasError('required')\\\">Stops needs to be between 10 and 100 characters with comma separating each stop</mat-error>\\n  </mat-form-field>\\n\\n  \\n  <!---------------------------------------------------------------------------------------------------------------------------------------->\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\">\\n          <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"f.invalid\\\" >\\n            Create New Ride\\n          </button>\\n          <button type=\\\"button\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"onCancel()\\\">\\n              Cancel\\n            </button>\\n      </div>\\n    </form>\\n\\n</section>\\n</mat-dialog-content>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport {NgForm } from '@angular/forms';\nimport { DriveRidesService } from '../../../../services/drive_rides.service';\nimport { Router } from \"@angular/router\";\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-create-new-dialog',\n  templateUrl: './create-new-dialog.component.html',\n  styleUrls: ['./create-new-dialog.component.css']\n})\nexport class CreateNewDialogComponent implements OnInit {\n  private datePicker_input: Date = null;\n\n  constructor(\n    private driverService : DriveRidesService,\n    private dialogRef: \n    MatDialogRef<CreateNewDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private router: Router,\n    private _snackBar: MatSnackBar) { }\n\n  ngOnInit() {\n  }\n  onSubmit(form : NgForm) {\n    let stopsDriverRidesStopsModelList =[];\n\n    let split_stops = form.value.stops.split(\",\");\n    for (let elem in split_stops) {\n      stopsDriverRidesStopsModelList.push({\n        stop_name : split_stops[elem]\n      })\n   }    \n    \n    this.driverService.setDriveRide(this.data.data_id,\n      form.value.rideName,\n      form.value.startLocation,\n      form.value.EndLocation,\n      form.value.startTime,\n      form.value.endTime,\n      form.value.passangerLimit,\n      new Date(form.value.dateFiled),\n      stopsDriverRidesStopsModelList);\n\n    this.router.navigateByUrl('/', {skipLocationChange: true}).then(()=>\n    this.router.navigate([\"/view-current-rides\"]));\n    this._snackBar.open(\"Drive created \"+ form.value.rideName+\".\", \"Dismiss\", {\n      duration: 2000,\n    });\n    this.onCancel();\n}\n\n  onCancel(){\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmRfZHJpdmVyL3ZpZXctY3VycmVudC1yaWRlcy9kZWxldGUtZGlhbG9nL2RlbGV0ZS1kaWFsb2cuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<section><p>\\n  Are you sure that you want to delete this ride?\\n</p> <b>{{ data.data_name }}</b>\\n\\n\\n<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\">\\n    <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"onCancel()\\\" >\\n      CANCEL\\n    </button>\\n    <button type=\\\"button\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"onDelete()\\\">\\n        DELETE\\n      </button>\\n</div>\\n\\n</section>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { DriveRidesService } from '../../../../services/drive_rides.service';\nimport { Router } from \"@angular/router\";\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-delete-dialog',\n  templateUrl: './delete-dialog.component.html',\n  styleUrls: ['./delete-dialog.component.css']\n})\nexport class DeleteDialogComponent implements OnInit {\n\n\n  constructor(\n    private dialogRef: \n    MatDialogRef<DeleteDialogComponent>,\n     @Inject(MAT_DIALOG_DATA) public data: any,\n      private driverService : DriveRidesService,\n      private router: Router,\n      private _snackBar: MatSnackBar\n  ) { \n\n  }\n\n  ngOnInit() {\n  }\n\n  onCancel(){this.dialogRef.close();}\n\n\n  onDelete(){\n    this.driverService.removeUniqueRide(this.data.data_id);\n    this.router.navigateByUrl('/', {skipLocationChange: true}).then(()=>\n    this.router.navigate([\"/view-current-rides\"]));\n    this._snackBar.open(\"Drive deleted \"+this.data.data_name+\".\", \"Dismiss\", {\n      duration: 2000,\n    });\n    this.onCancel();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmRfZHJpdmVyL3ZpZXctY3VycmVudC1yaWRlcy9lZGl0LWRpYWxvZy9lZGl0LWRpYWxvZy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-dialog-content>\\n<section>\\n    <h1 fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\"  fxLayoutAlign=\\\"center center\\\">Edit Existing Ride!</h1>\\n\\n    <form fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\"\\n    #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\">\\n\\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n    <mat-form-field appearance=\\\"outline\\\">\\n        <input [(ngModel)]=\\\"currentRide.name\\\" type=\\\"text\\\"  pattern=\\\"[A-Za-z0-9]{2,20}\\\" matInput placeholder=\\\"Ride Name\\\" ngModel name=\\\"rideName\\\" required #rideNameInput=\\\"ngModel\\\" > \\n        <mat-error *ngIf=\\\"rideNameInput.hasError('required')\\\">Please write ride name</mat-error>\\n        <mat-error *ngIf=\\\"!rideNameInput.hasError('required')\\\">Ride name should contain only letters and numbers with 2-20 characters</mat-error>\\n      </mat-form-field>\\n      \\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n<mat-form-field appearance=\\\"outline\\\">\\n    <input [(ngModel)]=\\\"currentRide.start_location\\\" type=\\\"text\\\"  pattern=\\\"[A-Za-z0-9 ]{2,30}\\\" matInput placeholder=\\\"Start Location\\\" ngModel name=\\\"startLocation\\\" required #startLocationInput=\\\"ngModel\\\" > \\n    <mat-error *ngIf=\\\"startLocationInput.hasError('required')\\\">Please write start location</mat-error>\\n    <mat-error *ngIf=\\\"!startLocationInput.hasError('required')\\\">Start Location should contain only letters and numbers with 2-30 characters</mat-error>\\n  </mat-form-field>\\n\\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n<mat-form-field appearance=\\\"outline\\\">\\n    <input [(ngModel)]=\\\"currentRide.end_location\\\" type=\\\"text\\\" pattern=\\\"[A-Za-z0-9 ]{2,30}\\\" matInput placeholder=\\\"End Location\\\" ngModel name=\\\"EndLocation\\\" required #endLocationInput=\\\"ngModel\\\" > \\n    <mat-error *ngIf=\\\"endLocationInput.hasError('required')\\\">Please write end location</mat-error>\\n    <mat-error *ngIf=\\\"!endLocationInput.hasError('required')\\\">End Location should contain only letters and numbers with 2-30 characters</mat-error>\\n  </mat-form-field>\\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\">\\n    <mat-form-field appearance=\\\"outline\\\">\\n        <input [(ngModel)]=\\\"currentRide.start_time\\\" type=\\\"text\\\" pattern=\\\"[0-9]{2}:[0-9]{2}\\\" matInput placeholder=\\\"Start Time\\\" ngModel name=\\\"startTime\\\" required #startTimeInput=\\\"ngModel\\\" > \\n        <mat-error *ngIf=\\\"startTimeInput.hasError('required')\\\">Please write start time</mat-error>\\n        <mat-error *ngIf=\\\"!startTimeInput.hasError('required')\\\">Start time should be like an example : 11:33</mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field appearance=\\\"outline\\\">\\n          <input [(ngModel)]=\\\"currentRide.end_time\\\" type=\\\"text\\\" pattern=\\\"[0-9]{2}:[0-9]{2}\\\" matInput placeholder=\\\"End Time\\\" ngModel name=\\\"endTime\\\" required #endTimeInput=\\\"ngModel\\\" > \\n          <mat-error *ngIf=\\\"endTimeInput.hasError('required')\\\">Please write end time</mat-error>\\n          <mat-error *ngIf=\\\"!endTimeInput.hasError('required')\\\">End time should be like an example : 11:33</mat-error>\\n        </mat-form-field>\\n\\n</div>\\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n\\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n<mat-form-field appearance=\\\"outline\\\">\\n    <input [(ngModel)]=\\\"currentRide.passengers_limit\\\" type=\\\"text\\\" pattern=\\\"[0-9]{1,2}\\\" matInput placeholder=\\\"Passanger Limit\\\" ngModel name=\\\"passangerLimit\\\" required #passangerLimitInput=\\\"ngModel\\\" > \\n    <mat-error *ngIf=\\\"passangerLimitInput.hasError('required')\\\">Please write Passanger Limit</mat-error>\\n    <mat-error *ngIf=\\\"!passangerLimitInput.hasError('required')\\\">Passanger Limit needs to be between 0-99</mat-error>\\n  </mat-form-field>\\n\\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n<mat-form-field appearance=\\\"outline\\\">\\n        <input [(ngModel)]=\\\"currentRide.date\\\" matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\" #datepickerInput=\\\"ngModel\\\" ngModel required name=\\\"dateFiled\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker></mat-datepicker>  \\n        <mat-error *ngIf=\\\"datepickerInput.hasError('required')\\\">Choose Date</mat-error>\\n        <mat-error *ngIf=\\\"!datepickerInput.hasError('required')\\\">Please choose a date!</mat-error>   \\n  </mat-form-field>\\n\\n\\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n<mat-form-field appearance=\\\"outline\\\">\\n    <input [(ngModel)]=\\\"userStopStr\\\" type=\\\"text\\\" pattern=\\\"[A-Za-z0-9,]{10,100}\\\" matInput placeholder=\\\"Write stops: divade them with comma\\\" ngModel name=\\\"stops\\\" required #stopsInput=\\\"ngModel\\\" > \\n    <mat-error *ngIf=\\\"stopsInput.hasError('required')\\\">Please write stops</mat-error>\\n    <mat-error *ngIf=\\\"!stopsInput.hasError('required')\\\">Stops needs to be between 10 and 100 characters with comma separating each stop</mat-error>\\n  </mat-form-field>\\n\\n\\t\\t<!---------------------------------------------------------------------------------------------------------------------------------------->\\n    <mat-form-field appearance=\\\"outline\\\">\\n        <mat-label>Select status</mat-label>\\n        <mat-select [(value)]=\\\"currentRide.drive_ride_status\\\" >\\n          <mat-option value=\\\"ended\\\">Mark As Ended</mat-option>\\n          <mat-option value=\\\"canceled\\\">Mark as Canceled</mat-option>\\n          <mat-option value=\\\"ongoing\\\">Mark as ongoing</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n  \\n  <!---------------------------------------------------------------------------------------------------------------------------------------->\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\">\\n          <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"f.invalid\\\" >\\n            Edit\\n          </button>\\n          <button type=\\\"button\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"onCancel()\\\">\\n              Cancel\\n            </button>\\n      </div>\\n    </form>\\n\\n</section>\\n\\n</mat-dialog-content>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport {NgForm } from '@angular/forms';\nimport { DriveRidesService } from '../../../../services/drive_rides.service';\nimport { NotificationsService } from '../../../../services/notification.service';\n\n\n@Component({\n  selector: 'app-edit-dialog',\n  templateUrl: './edit-dialog.component.html',\n  styleUrls: ['./edit-dialog.component.css']\n})\nexport class EditDialogComponent implements OnInit {\n  private currentRide;\n  private rideTEMP;\n  private userStopStr;\n\n  constructor(private dialogRef: \n    MatDialogRef<EditDialogComponent>,\n     @Inject(MAT_DIALOG_DATA) public data: any,\n      private driverService : DriveRidesService,\n      private notificationService : NotificationsService) {\n        this.rideTEMP = this.driverService.getUniqueRide(data.data_id);\n        this.currentRide = {\n          id_drive_rides  : -1,\n            id_driver       : -1,\n            name            : \"\",\n            start_location  : \"\",\n            end_location    : \"\",\n            departure_time  : \"\",\n            start_time      : \"\",\n            end_time        : \"\",\n            drive_ride_status :  '',\n            passengers_limit  : -1,\n            current_passengers_number : -1,\n            current_passengers_data : [],\n            drive_ride_stops        : [],\n            notifications: [],\n            date : new Date()\n        }\n        Object.keys(this.rideTEMP).forEach(key=>this.currentRide[key]=this.rideTEMP[key]);\n    \n        let stopsArray = [];\n        for (let elem in this.currentRide.drive_ride_stops){\n          stopsArray.push(this.currentRide.drive_ride_stops[elem].stop_name);\n        }\n        this.userStopStr = stopsArray.join(\",\");\n      }\n\n  ngOnInit() {\n  }\n\n  onSubmit(form : NgForm) {\n    Object.keys(this.currentRide).forEach(key=>this.rideTEMP[key]=this.currentRide[key]);\n    if(this.currentRide.drive_ride_status == \"ended\"){\n      let id_ride =  this.rideTEMP.id_drive_rides;\n      let id_driver = this.rideTEMP.id_driver;\n      let objectListPassData = this.rideTEMP.current_passengers_data;\n\n      for (let elem in objectListPassData){\n        let id_passenger = objectListPassData[elem].id_user;\n        this.notificationService.setNewDriveEnd(id_passenger,id_driver,id_ride );\n      }\n    }    \n    this.onCancel();\n  }\n\n  onCancel(){\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \".div-style{\\r\\n    max-width: 300px;\\r\\n    margin: 20px;\\r\\n    margin-right: 100px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZF9kcml2ZXIvdmlldy1jdXJyZW50LXJpZGVzL3ZpZXctY3VycmVudC1yaWRlcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0lBQ2pCLGFBQWE7SUFDYixvQkFBb0I7Q0FDdkIiLCJmaWxlIjoic3JjL2FwcC9kYXNoYm9hcmQvZGFzaGJvYXJkX2RyaXZlci92aWV3LWN1cnJlbnQtcmlkZXMvdmlldy1jdXJyZW50LXJpZGVzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGl2LXN0eWxle1xyXG4gICAgbWF4LXdpZHRoOiAzMDBweDtcclxuICAgIG1hcmdpbjogMjBweDtcclxuICAgIG1hcmdpbi1yaWdodDogMTAwcHg7XHJcbn0iXX0= */\"","module.exports = \"\\n\\n<section>\\n\\n  <div class=\\\"div-style\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"end end\\\">\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"20px\\\">\\n          <mat-form-field>\\n              <mat-label>Filter Rides</mat-label>\\n              <input matInput type=\\\"text\\\" (keyup)=\\\"doFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n            </mat-form-field>\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"createRide()\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"end end\\\" >Create New Ride</button>\\n      </div> \\n  </div>\\n  \\n    \\n\\n<!-- property binding -->\\n<mat-table [dataSource]= \\\"ridesSource\\\" matSort >\\n   \\n  <!-- ride name -->\\n  <ng-container matColumnDef=\\\"name\\\" >\\n    <mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\">{{ element.name }}</mat-cell>\\n  </ng-container>\\n\\n  <!-- RIDE START LOCATION -->\\n  <ng-container matColumnDef=\\\"start_location\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header>Start Location</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\">{{ element.start_location }}</mat-cell>\\n  </ng-container>\\n\\n   <!-- RIDE END LOCATION -->\\n  <ng-container matColumnDef=\\\"end_location\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header>End Location</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\">{{ element.end_location }}</mat-cell>\\n  </ng-container>\\n\\n  <!-- RIDE TIME -->\\n  <ng-container matColumnDef=\\\"time\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header>Time</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\">{{ element.start_time }} - {{ element.end_time }}</mat-cell>\\n  </ng-container>\\n\\n  <!-- RIDE DATE -->\\n  <ng-container matColumnDef=\\\"date\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header>Date</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\">\\n      {{ element.date.getDate() }}/\\n      {{ element.date.getMonth()+1 }}/\\n      {{ element.date.getFullYear() }}\\n    </mat-cell>\\n  </ng-container>\\n\\n\\n  <!-- RIDE STATUS -->\\n  <ng-container matColumnDef=\\\"drive_ride_status\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header>Status</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\">{{ element.drive_ride_status }}</mat-cell>\\n  </ng-container>\\n\\n\\n  <!-- RIDE LIMIT -->\\n  <ng-container matColumnDef=\\\"passengers_limit\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header>Limit</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\">{{ element.passengers_limit }}</mat-cell>\\n  </ng-container>\\n\\n\\n  <!-- RIDE CURRENT PASSENGERS -->\\n  <ng-container matColumnDef=\\\"current_passengers\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header>Current passengers</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\">\\n        <button mat-stroked-button  (click)=\\\"onViewPassengers(element.id_drive_rides)\\\">\\n            {{ element.current_passengers_number }}\\n        </button>\\n    </mat-cell>\\n  </ng-container>\\n\\n   <!-- RIDE ACTIONS -->\\n   <ng-container matColumnDef=\\\"actions\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header>Actions</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\">\\n      <button mat-stroked-button \\n      [disabled]=\\\"driveRidesService.getUniqueRide(element.id_drive_rides).drive_ride_status =='ended'\\\"\\n       (click)=\\\"editRide(element.id_drive_rides)\\\">Edit</button>\\n      <button mat-stroked-button  (click)=\\\"deleteRide(element.id_drive_rides, element.name)\\\">Delete</button>\\n    </mat-cell>\\n  </ng-container>\\n\\n   <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n   <mat-row *matRowDef=\\\"let rows; columns: displayedColumns\\\"></mat-row>\\n</mat-table>\\n\\n<mat-paginator [pageSize]=\\\"3\\\" [pageSizeOptions]=\\\"[2,3,4,6,8]\\\"></mat-paginator>\\n\\n</section>\\n\"","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\nimport { DriveRidesService } from '../../../services/drive_rides.service';\nimport { UsersService } from '../../../services/users.service';\nimport { AppComponent } from '../../../app.component';\nimport { DriveRidesModel } from '../../../services/models/drive-rides.model';\nimport { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\nimport { MatDialog } from '@angular/material';\nimport { EditDialogComponent } from './edit-dialog/edit-dialog.component';\nimport { DeleteDialogComponent } from './delete-dialog/delete-dialog.component';\nimport { CreateNewDialogComponent } from './create-new-dialog/create-new-dialog.component';\nimport { ViewPassengersRideDialogComponent } from '../../view-passengers-ride-dialog/view-passengers-ride-dialog.component';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-view-current-rides',\n  templateUrl: './view-current-rides.component.html',\n  styleUrls: ['./view-current-rides.component.css']\n})\nexport class ViewCurrentRidesComponent implements OnInit, AfterViewInit {\n  displayedColumns = [\"name\", \"start_location\", \"end_location\", \"time\", \"date\" , \"drive_ride_status\", \"passengers_limit\" , \"current_passengers\" , \"actions\"];\n  private disabled: boolean;\n  ridesSource = new MatTableDataSource<DriveRidesModel>();\n\n  @ViewChild(MatSort) sort : MatSort;\n  @ViewChild(MatPaginator) paginator : MatPaginator;\n\n  constructor(private driveRidesService : DriveRidesService,\n    private appComponent : AppComponent,\n    private userService : UsersService,\n    public dialog: MatDialog,\n    private router: Router,) {\n      //___________________________________________ reddirect\n      if( this.userService.getCurrenSession().id_user == -1){\n        this.router.navigate([\"/\"]);\n       }\n     //___________________________________________ reddirect end\n     }\n\n  ngOnInit() {\n    this.ridesSource.data =  this.driveRidesService.getDriverRides(this.userService.getCurrenSession().id_user);\n  }\n\n  ngAfterViewInit(){  \n    this.ridesSource.sort = this.sort;\n    this.ridesSource.paginator = this.paginator;\n  }\n  editRide(id : number){\n    this.dialog.open(EditDialogComponent, {data: { data_id: id}},);\n  }\n  deleteRide(id : number, name:string){\n    this.dialog.open(DeleteDialogComponent, {data: { data_id: id, data_name: name}},);\n  }\n  createRide(){\n    let driverID = this.userService.getCurrenSession().id_user;\n    this.dialog.open(CreateNewDialogComponent, {data: { data_id: driverID}},);\n  }\n\n  onViewPassengers(id:number){\n    this.dialog.open(ViewPassengersRideDialogComponent, {data: { data_id: id}},);\n  }\n\n  doFilter(filterValue: string){\n    this.ridesSource.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmRfcGFzc2VuZ2VyL3NlYXJjaC1hY3RpdmUtcmlkZXMvcmVxdWVzdC1yaWRlLWRpYWxvZy9yZXF1ZXN0LXJpZGUtZGlhbG9nLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<section><p>\\n    Please confirm that you want to request a ride\\n  </p> <b>{{ data.data_name }}</b>\\n  \\n  \\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\">\\n      <button type=\\\"button\\\" mat-stroked-button (click)=\\\"onCancel()\\\" >\\n        CANCEL\\n      </button>\\n      <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\"  (click)=\\\"onRequestARide()\\\">\\n          REQUEST\\n        </button>\\n  </div>\\n  \\n  </section>\\n  \"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { DriveRidesService } from '../../../../services/drive_rides.service';\nimport { Router } from \"@angular/router\";\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { UsersService } from '../../../../services/users.service';\nimport { NotificationsService } from '../../../../services/notification.service';\n\n@Component({\n  selector: 'app-request-ride-dialog',\n  templateUrl: './request-ride-dialog.component.html',\n  styleUrls: ['./request-ride-dialog.component.css']\n})\nexport class RequestRideDialogComponent implements OnInit {\n\n  constructor(private dialogRef: \n    MatDialogRef<RequestRideDialogComponent>,\n     @Inject(MAT_DIALOG_DATA) public data: any,\n      private driverService : DriveRidesService,\n      private _snackBar: MatSnackBar,\n      private userService : UsersService,\n      private notificationService : NotificationsService) { }\n\n  ngOnInit() {\n  }\n\n  onCancel(){this.dialogRef.close();}\n\n  onRequestARide(){\n    let passID = this.userService.getCurrenSession().id_user;\n    let driverID  = this.driverService.getUniqueRide(this.data.data_id).id_driver;\n    let rideID = this.data.data_id;\n    this.notificationService.setNewRequest(passID, driverID,rideID);\n    this.onCancel();\n  }\n\n}\n","module.exports = \".margin-right-10px{\\r\\n    margin-right: 10px;\\r\\n}\\r\\n.margin-top-10px{\\r\\n    margin-top:10px;\\r\\n}\\r\\n.toggle-div{\\r\\n    margin: 30px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZF9wYXNzZW5nZXIvc2VhcmNoLWFjdGl2ZS1yaWRlcy9zZWFyY2gtYWN0aXZlLXJpZGVzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxtQkFBbUI7Q0FDdEI7QUFDRDtJQUNJLGdCQUFnQjtDQUNuQjtBQUVEO0lBQ0ksYUFBYTtDQUNoQiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmRfcGFzc2VuZ2VyL3NlYXJjaC1hY3RpdmUtcmlkZXMvc2VhcmNoLWFjdGl2ZS1yaWRlcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hcmdpbi1yaWdodC0xMHB4e1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG59XHJcbi5tYXJnaW4tdG9wLTEwcHh7XHJcbiAgICBtYXJnaW4tdG9wOjEwcHg7XHJcbn1cclxuXHJcbi50b2dnbGUtZGl2e1xyXG4gICAgbWFyZ2luOiAzMHB4O1xyXG59Il19 */\"","module.exports = \"\\n<section>\\n\\n  \\n<div class=\\\"toggle-div\\\"  fxLayout=\\\"row\\\" fxLayoutAlign=\\\" center\\\" >\\n    {{toggleBtn ? 'Ongoing Rides' : 'Inactive Rides'}}\\n    <mat-slide-toggle [(ngModel)]=\\\"toggleBtn\\\"></mat-slide-toggle>\\n</div>\\n<!----------------------------------------------------------------------------------------------->\\n<!-- ONgoing Rides-->\\n<!----------------------------------------------------------------------------------------------->\\n  <div *ngIf=\\\"toggleBtn\\\">\\n      <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"margin-top-10px\\\">\\n          <mat-form-field>\\n              <mat-label>Filter Rides</mat-label>\\n              <input matInput type=\\\"text\\\" (keyup)=\\\"doFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n            </mat-form-field>\\n      </div>\\n      \\n          \\n      \\n      <!-- property binding -->\\n      <mat-table [dataSource]= \\\"ridesSource\\\" matSort class=\\\"margin-right-10px\\\" >\\n    \\n        <!-- driver name -->\\n        <ng-container matColumnDef=\\\"driver_name\\\" >\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Driver Name</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\">\\n                <a [routerLink]=\\\"['/profile']\\\" [queryParams]=\\\"{userID: element.id_driver}\\\" (click)=\\\"onDriverView(element.id_driver)\\\">\\n                  {{element.driverName}}\\n                </a>\\n            </mat-cell>\\n          </ng-container>\\n         \\n        <!-- ride name -->\\n        <ng-container matColumnDef=\\\"ride_name\\\" >\\n          <mat-header-cell *matHeaderCellDef mat-sort-header>Ride Name</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\">{{ element.name }}</mat-cell>\\n        </ng-container>\\n    \\n         <!-- RIDE START LOCATION -->\\n      <ng-container matColumnDef=\\\"location\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header>Location</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\"> \\n            FROM {{ element.start_location }}<br>\\n            TO {{ element.end_location }} </mat-cell>\\n        </ng-container>\\n      \\n    \\n      \\n        <!-- RIDE TIME -->\\n        <ng-container matColumnDef=\\\"time\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header>Time</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\">{{ element.start_time }} - {{ element.end_time }}</mat-cell>\\n        </ng-container>\\n      \\n        <!-- RIDE DATE -->\\n        <ng-container matColumnDef=\\\"date\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header>Date</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\">\\n            {{ element.date.getDate() }}/\\n            {{ element.date.getMonth()+1 }}/\\n            {{ element.date.getFullYear() }}\\n          </mat-cell>\\n        </ng-container>\\n      \\n      \\n        <!-- RIDE STATUS -->\\n        <ng-container matColumnDef=\\\"status\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header>Status</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\">{{ element.drive_ride_status }}</mat-cell>\\n        </ng-container>\\n      \\n      \\n        <!-- RIDE LIMIT -->\\n        <ng-container matColumnDef=\\\"limit\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header>Limit</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\">{{ element.passengers_limit }}</mat-cell>\\n        </ng-container>\\n      \\n      \\n        <!-- RIDE CURRENT PASSENGERS -->\\n        <ng-container matColumnDef=\\\"current_passengers\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header>Current passengers</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\">\\n              <button mat-stroked-button  (click)=\\\"onViewPassengers(element.id_drive_rides)\\\">\\n                  {{ element.current_passengers_number }}\\n              </button>\\n          </mat-cell>\\n        </ng-container>\\n      \\n         <!-- RIDE ACTIONS -->\\n         <ng-container matColumnDef=\\\"actions\\\" >\\n          <mat-header-cell *matHeaderCellDef mat-sort-header>Actions</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\">\\n    \\n            <button mat-raised-button color=\\\"warn\\\"  (click)=\\\"onRequest(element.id_drive_rides)\\\">\\n                Request\\n            </button>\\n    \\n            <button mat-raised-button color=\\\"primary\\\"   (click)=\\\"onViewStops(element.id_drive_rides)\\\">\\n                Stops\\n            </button>        \\n              \\n          </mat-cell>\\n        </ng-container>\\n      \\n         <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n         <mat-row *matRowDef=\\\"let rows; columns: displayedColumns\\\"></mat-row>\\n      </mat-table>\\n      \\n      <mat-paginator [pageSize]=\\\"3\\\" [pageSizeOptions]=\\\"[2,3,4,6,8]\\\"></mat-paginator>\\n\\n\\n  </div>\\n<!----------------------------------------------------------------------------------------------->\\n<!-- Inactive Rides-->\\n<!----------------------------------------------------------------------------------------------->\\n  <div *ngIf=\\\"!toggleBtn\\\">\\n      <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"margin-top-10px\\\">\\n          <mat-form-field>\\n              <mat-label>Filter Rides</mat-label>\\n              <input matInput type=\\\"text\\\" (keyup)=\\\"doFilter2($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n            </mat-form-field>\\n      </div>\\n      \\n          \\n      \\n      <!-- property binding -->\\n      <mat-table [dataSource]= \\\"ridesSource2\\\" matSort class=\\\"margin-right-10px\\\" >\\n    \\n        <!-- driver name -->\\n        <ng-container matColumnDef=\\\"driver_name\\\" >\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Driver Name</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\">\\n                <a [routerLink]=\\\"['/profile']\\\" [queryParams]=\\\"{userID: element.id_driver}\\\" (click)=\\\"onDriverView(element.id_driver)\\\">\\n                  {{element.driverName}}\\n                </a>\\n            </mat-cell>\\n          </ng-container>\\n         \\n        <!-- ride name -->\\n        <ng-container matColumnDef=\\\"ride_name\\\" >\\n          <mat-header-cell *matHeaderCellDef mat-sort-header>Ride Name</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\">{{ element.name }}</mat-cell>\\n        </ng-container>\\n    \\n         <!-- RIDE START LOCATION -->\\n      <ng-container matColumnDef=\\\"location\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header>Location</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\"> \\n            FROM {{ element.start_location }}<br>\\n            TO {{ element.end_location }} </mat-cell>\\n        </ng-container>\\n      \\n    \\n      \\n        <!-- RIDE TIME -->\\n        <ng-container matColumnDef=\\\"time\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header>Time</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\">{{ element.start_time }} - {{ element.end_time }}</mat-cell>\\n        </ng-container>\\n      \\n        <!-- RIDE DATE -->\\n        <ng-container matColumnDef=\\\"date\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header>Date</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\">\\n            {{ element.date.getDate() }}/\\n            {{ element.date.getMonth()+1 }}/\\n            {{ element.date.getFullYear() }}\\n          </mat-cell>\\n        </ng-container>\\n      \\n      \\n        <!-- RIDE STATUS -->\\n        <ng-container matColumnDef=\\\"status\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header>Status</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\">{{ element.drive_ride_status }}</mat-cell>\\n        </ng-container>\\n      \\n      \\n        <!-- RIDE LIMIT -->\\n        <ng-container matColumnDef=\\\"limit\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header>Limit</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\">{{ element.passengers_limit }}</mat-cell>\\n        </ng-container>\\n      \\n      \\n        <!-- RIDE CURRENT PASSENGERS -->\\n        <ng-container matColumnDef=\\\"current_passengers\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header>Current passengers</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\">\\n              <button mat-stroked-button  (click)=\\\"onViewPassengers(element.id_drive_rides)\\\">\\n                  {{ element.current_passengers_number }}\\n              </button>\\n          </mat-cell>\\n        </ng-container>\\n      \\n         <!-- RIDE ACTIONS -->\\n         <ng-container matColumnDef=\\\"actions\\\" >\\n          <mat-header-cell *matHeaderCellDef mat-sort-header>Actions</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\">\\n   \\n            <button mat-raised-button color=\\\"primary\\\"   (click)=\\\"onViewStops(element.id_drive_rides)\\\">\\n                Stops\\n            </button>        \\n              \\n          </mat-cell>\\n        </ng-container>\\n      \\n         <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n         <mat-row *matRowDef=\\\"let rows; columns: displayedColumns\\\"></mat-row>\\n      </mat-table>\\n      \\n      <mat-paginator [pageSize]=\\\"3\\\" [pageSizeOptions]=\\\"[2,3,4,6,8]\\\"></mat-paginator>\\n\\n\\n  </div>\\n \\n  \\n  </section>\\n  \"","import { Component, OnInit, AfterViewInit, ViewChild  } from '@angular/core';\nimport { AppComponent } from '../../../app.component';\nimport { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\nimport { MatDialog } from '@angular/material';\nimport { Router } from \"@angular/router\";\n\nimport { DriveRidesService } from '../../../services/drive_rides.service';\nimport { UsersService } from '../../../services/users.service';\nimport { DriveRidesModel } from '../../../services/models/drive-rides.model';\nimport { ViewPassengersRideDialogComponent } from '../../view-passengers-ride-dialog/view-passengers-ride-dialog.component';\nimport { RequestRideDialogComponent } from './request-ride-dialog/request-ride-dialog.component';\nimport { StopsRideDialogComponent } from './stops-ride-dialog/stops-ride-dialog.component';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n\n\n@Component({\n  selector: 'app-search-active-rides',\n  templateUrl: './search-active-rides.component.html',\n  styleUrls: ['./search-active-rides.component.css']\n})\nexport class SearchActiveRidesComponent implements OnInit, AfterViewInit {\n  displayedColumns = [\"driver_name\" , \"ride_name\",\"location\" , \"time\", \"date\" , \"status\", \"limit\" , \"current_passengers\" , \"actions\"];\n  private userID: number;\n  private toggleBtn : boolean;\n\n  private ridesSource = new MatTableDataSource<DriveRidesModel>();\n  private ridesSource2 = new MatTableDataSource<DriveRidesModel>();\n\n  @ViewChild(MatSort) sort : MatSort;\n  @ViewChild(MatPaginator) paginator : MatPaginator;\n\n  constructor(private driveRidesService : DriveRidesService,\n    private appComponent : AppComponent,\n    private userService : UsersService,\n    public dialog: MatDialog,\n    private router: Router,\n    private _snackBar: MatSnackBar,) {\n      this.toggleBtn = true;\n\n      //___________________________________________ reddirect\n      if( this.userService.getCurrenSession().id_user == -1){\n       this.router.navigate([\"/\"]);\n      }\n    //___________________________________________ reddirect end\n     }\n\n  ngOnInit() {\n    this.userID = this.userService.getCurrenSession().id_user;\n    this.ridesSource.data  =  this.driveRidesService.getOngoingDrives();\n    this.ridesSource2.data = this.driveRidesService.getSpecificInactivePassengerRides(this.userID);\n\n    this.ridesSource.data  = this.setDriversName(this.ridesSource.data);\n    this.ridesSource2.data = this.setDriversName(this.ridesSource2.data);\n    \n  }\n\n  setDriversName(source_data_in){\n    for (let elem in source_data_in){\n      let current_user = this.userService.getProfileData(source_data_in[elem].id_driver);\n      let fname = current_user.fname;\n      let lname = current_user.lname;\n      source_data_in[elem][\"driverName\"] = `${fname} ${lname}`;\n    }\n    return source_data_in;\n  }\n\n  ngAfterViewInit(){  \n    this.ridesSource.sort = this.sort;\n    this.ridesSource.paginator = this.paginator;\n\n    this.ridesSource2.sort = this.sort;\n    this.ridesSource2.paginator = this.paginator;\n  }\n\n\n  doFilter(filterValue: string){\n    this.ridesSource.filter = filterValue.trim().toLowerCase();\n  }\n  doFilter2(filterValue: string){\n    this.ridesSource2.filter = filterValue.trim().toLowerCase();\n  }\n\n  onDriverView(id:number){\n    this.router.navigateByUrl('/', {skipLocationChange: true}).then(()=>\n    this.router.navigate([\"/profile\", {userID: id} ]));\n  }\n\n  onViewPassengers(id:number){\n    this.dialog.open(ViewPassengersRideDialogComponent, {data: { data_id: id}},);\n  }\n\n  onRequest(id: number){\n    let result = this.driveRidesService.isRequestAvailableForUniqueUser(id, this.userService.getCurrenSession().id_user);\n    switch(result) { \n      case \"success\": { \n        this.dialog.open(RequestRideDialogComponent, \n          {\n            data: { data_id: id,\n                  data_name: this.driveRidesService.getUniqueRide(id).name }\n            },);\n         break; \n      }\n      case \"aleardy_exist\": { \n        this._snackBar.open(\"You are already registered as passanger!\", \"close\", {\n          duration: 2000,\n        });\n        \n        break; \n     } \n      case \"full\": { \n        this._snackBar.open(\"You can't do that! That ride is full!\", \"close\", {\n          duration: 2000,\n        });\n        \n         break; \n      } // case full end\n    } // switch end;\n  } // onRequest end;\n\n  onViewStops(id: number){\n    this.dialog.open(StopsRideDialogComponent, {data: { data_id: id}},);\n  }\n}\n","module.exports = \".containerDIV{\\r\\n    margin-top: 15px;\\r\\n    margin-bottom: 15px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZF9wYXNzZW5nZXIvc2VhcmNoLWFjdGl2ZS1yaWRlcy9zdG9wcy1yaWRlLWRpYWxvZy9zdG9wcy1yaWRlLWRpYWxvZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0lBQ2pCLG9CQUFvQjtDQUN2QiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmRfcGFzc2VuZ2VyL3NlYXJjaC1hY3RpdmUtcmlkZXMvc3RvcHMtcmlkZS1kaWFsb2cvc3RvcHMtcmlkZS1kaWFsb2cuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXJESVZ7XHJcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxufSJdfQ== */\"","module.exports = \"<mat-dialog-content>\\n  <section>\\n    Stops for the ride:\\n    <div *ngFor=\\\"let item of stopsArray\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"containerDIV\\\" >\\n          {{item.stop_name}}\\n    </div>\\n  \\n  \\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\">\\n      <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"onCancel()\\\" >\\n        CANCEL\\n      </button>\\n      </div>\\n  \\n  </section>\\n</mat-dialog-content>\\n  \"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { DriveRidesService } from '../../../../services/drive_rides.service';\n\n@Component({\n  selector: 'app-stops-ride-dialog',\n  templateUrl: './stops-ride-dialog.component.html',\n  styleUrls: ['./stops-ride-dialog.component.css']\n})\nexport class StopsRideDialogComponent implements OnInit {\n  private stopsArray = [];\n\n  constructor(private dialogRef: \n    MatDialogRef<StopsRideDialogComponent>,\n     @Inject(MAT_DIALOG_DATA) public data: any,\n      private driverService : DriveRidesService,\n      ) {\n      this.stopsArray = this.driverService.getStopsArray(data.data_id);\n      }\n\n  ngOnInit() {\n  }\n\n  onCancel(){this.dialogRef.close();}\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9ub3RpZmljYXRpb24tdGFicy9ub3RpZmljYXRpb24tZW5kZWQtcmlkZXMvbm90aWZpY2F0aW9uLWVuZGVkLXJpZGVzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\n\\n<section>\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"20px\\\">\\n        <mat-form-field>\\n            <mat-label>Filter Rides</mat-label>\\n            <input matInput type=\\\"text\\\" (keyup)=\\\"doFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n          </mat-form-field>\\n    </div> \\n\\n  \\n\\n<!-- property binding -->\\n<mat-table [dataSource]=\\\"notificationSource\\\" matSort >\\n \\n<!-- driver name -->\\n<ng-container matColumnDef=\\\"driver_name\\\">\\n  <mat-header-cell *matHeaderCellDef mat-sort-header>Driver Name</mat-header-cell>\\n  <mat-cell *matCellDef=\\\"let element\\\">\\n      <a [routerLink]=\\\"['/profile']\\\" [queryParams]=\\\"{userID: element.id_driver}\\\" (click)=\\\"onProfileUse(element.id_driver)\\\">\\n        {{element.driverName}}\\n      </a>\\n    </mat-cell>\\n</ng-container>\\n\\n<!-- passenger name -->\\n<ng-container matColumnDef=\\\"passenger_name\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header>Passanger Name</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\">\\n          <a [routerLink]=\\\"['/profile']\\\" [queryParams]=\\\"{userID: element.id_passanger}\\\" (click)=\\\"onProfileUse(element.id_passanger)\\\">\\n            {{element.passengerName}}\\n          </a>        \\n      </mat-cell>\\n  </ng-container>\\n\\n  <!-- action -->\\n<ng-container matColumnDef=\\\"action\\\" >\\n    <mat-header-cell *matHeaderCellDef mat-sort-header>Action</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\">\\n        <button\\n        *ngIf=\\\"userService.getCurrenSession().acc_type == 'driver'\\\"\\n         mat-flat-button color=\\\"accent\\\"  (click)=\\\"onRateUser(element.id_passanger)\\\">Rate Passenger</button>\\n         <button\\n         *ngIf=\\\"userService.getCurrenSession().acc_type == 'passenger'\\\"\\n         mat-flat-button color=\\\"accent\\\"  (click)=\\\"onRateUser(element.id_driver, element.notification_id)\\\">Rate Driver</button>\\n    </mat-cell>\\n  </ng-container>\\n\\n\\n\\n <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n <mat-row *matRowDef=\\\"let rows; columns: displayedColumns\\\"></mat-row>\\n</mat-table>\\n\\n<mat-paginator [pageSize]=\\\"3\\\" [pageSizeOptions]=\\\"[2,3,4,6,8]\\\"></mat-paginator>\\n\\n</section>\\n\"","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\nimport { DriveRidesService } from '../../../services/drive_rides.service';\nimport { UsersService } from '../../../services/users.service';\nimport { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\nimport { MatDialog } from '@angular/material';\nimport { NotificationsService } from '../../../services/notification.service';\nimport { Router } from \"@angular/router\";\nimport { RateDialogComponent } from './rate-dialog/rate-dialog.component';\n\n@Component({\n  selector: 'app-notification-ended-rides',\n  templateUrl: './notification-ended-rides.component.html',\n  styleUrls: ['./notification-ended-rides.component.css']\n})\nexport class NotificationEndedRidesComponent implements OnInit {\n  displayedColumns = [\"driver_name\",\"passenger_name\" , \"action\"];\n  notificationSource = new MatTableDataSource<any>();\n\n  @ViewChild(MatSort) sort : MatSort;\n  @ViewChild(MatPaginator) paginator : MatPaginator;\n\n  constructor(private driveRidesService : DriveRidesService,\n    private userService : UsersService,\n    private notificationService : NotificationsService, \n    public dialog: MatDialog,\n    private router: Router,) { }\n\n  ngOnInit() {\n    this.setUpDataForTable();\n  }\n\n  setUpDataForTable(){\n    this.notificationSource.data  = this.notificationService.getNotificationsForSpecificUserEndedRides(this.userService.getCurrenSession().id_user);\n    for (let elem in this.notificationSource.data){\n        let current_driver = this.userService.getProfileData(this.notificationSource.data[elem].id_driver);\n        let current_passenger = this.userService.getProfileData(this.notificationSource.data[elem].id_passanger);\n        this.notificationSource.data[elem][\"driverName\"] = `${current_driver.fname} ${current_driver.lname}`;\n        this.notificationSource.data[elem][\"passengerName\"] = `${current_passenger.fname} ${current_passenger.lname}`;\n    }\n  }\n\n  ngAfterViewInit(){  \n    this.notificationSource.sort = this.sort;\n    this.notificationSource.paginator = this.paginator;\n  }\n  doFilter(filterValue: string){\n    this.notificationSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  onProfileUse(id:number){\n    this.router.navigateByUrl('/', {skipLocationChange: true}).then(()=>\n    this.router.navigate([\"/profile\", {userID: id} ]));\n  }\n\n  onRateUser(id:number, id_notification:number){ //\n    \n    let user = this.userService.getProfileData(id);\n    let username = `${user.fname} ${user.lname}`;\n    this.dialog.open(RateDialogComponent, {data: { data_id: id,\n      id_notification : id_notification,\n       data_name: username}},);\n    this.dialog._afterAllClosed.subscribe(() => {\n      this.setUpDataForTable();\n      });\n  }\n  \n\n}\n","module.exports = \".my-margin{\\r\\n    margin: 30px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL25vdGlmaWNhdGlvbi10YWJzL25vdGlmaWNhdGlvbi1lbmRlZC1yaWRlcy9yYXRlLWRpYWxvZy9yYXRlLWRpYWxvZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtDQUNoQiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9ub3RpZmljYXRpb24tdGFicy9ub3RpZmljYXRpb24tZW5kZWQtcmlkZXMvcmF0ZS1kaWFsb2cvcmF0ZS1kaWFsb2cuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5teS1tYXJnaW57XHJcbiAgICBtYXJnaW46IDMwcHg7XHJcbn0iXX0= */\"","module.exports = \"<mat-dialog-content>\\n  <p class=\\\"my-margin\\\">\\n    Leave feedback for <b>{{ data.data_name }}</b>\\n  </p> \\n\\n  <form fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\"\\n    #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\">\\n\\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n<mat-form-field appearance=\\\"outline\\\" floatPlaceholder=\\\"always\\\" floatLabel=\\\"always\\\" class=\\\"mat-form-field--no-underline\\\">\\n    <mat-label>Feedback</mat-label>\\n  <input matInput placeholder style=\\\"display: none\\\">\\n  <mat-radio-group ngModel name=\\\"feedback\\\" [(ngModel)]=\\\"feedback\\\" required #feedbackInput=\\\"ngModel\\\" fxLayout fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"20px\\\">\\n    <mat-radio-button value=\\\"positive\\\">Positive</mat-radio-button>\\n    <mat-radio-button value=\\\"negative\\\">Negative</mat-radio-button>\\n  </mat-radio-group>\\n</mat-form-field>\\n\\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n      <mat-form-field class=\\\"example-full-width\\\">\\n          <textarea pattern=\\\"[A-Za-z0-9 ,!.?]{0,40}\\\" matInput placeholder=\\\"Leave a comment\\\"\\n          name=\\\"comment\\\"  #commentInput=\\\"ngModel\\\"ngModel></textarea>\\n          <mat-error *ngIf=\\\"commentInput.hasError('required')\\\">Write additional comment</mat-error>\\n          <mat-error *ngIf=\\\"!commentInput.hasError('required')\\\">Comment must be between 0 and 40 characters</mat-error>\\n        </mat-form-field>\\n\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\">\\n          <button type=\\\"button\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"onCancel()\\\" >\\n            CANCEL\\n          </button>\\n\\n          <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"f.invalid\\\" >\\n              Submit Feedback\\n            </button>\\n      </div>\\n      </form>\\n  \\n  \\n \\n\\n\\n</mat-dialog-content>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { DriveRidesService } from '../../../../services/drive_rides.service';\nimport { Router } from \"@angular/router\";\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {NgForm } from '@angular/forms';\nimport { UsersService } from '../../../../services/users.service';\nimport { NotificationsService } from '../../../../services/notification.service';\nimport { ReputationService } from '../../../../services/reputation.service';\n\n@Component({\n  selector: 'app-rate-dialog',\n  templateUrl: './rate-dialog.component.html',\n  styleUrls: ['./rate-dialog.component.css']\n})\nexport class RateDialogComponent implements OnInit {\n  private feedback: string;\n\n  constructor(private dialogRef: \n    MatDialogRef<RateDialogComponent>,\n     @Inject(MAT_DIALOG_DATA) public data: any,\n      private router: Router,\n      private _snackBar: MatSnackBar,\n      private userService : UsersService,\n      private notificationService : NotificationsService,\n      private reputationService : ReputationService ) {\n        this.feedback = \"positive\";\n        \n      }\n\n  ngOnInit() {\n  }\n\nonCancel(){this.dialogRef.close();}\nonSubmit(form : NgForm) {\n  // set that user has rated the ride\n  if(this.userService.getCurrenSession().acc_type == \"driver\"){\n      this.notificationService.setRideEndRatedDriver(this.data.id_notification);\n  } else {\n    this.notificationService.setRideEndRatedPassenger(this.data.id_notification);\n  }\n  //set positive or negative feedback\n  if(this.feedback == \"positive\"){\n    this.reputationService.addPositive(this.data.data_id);\n  } else {\n    this.reputationService.setNegative(this.data.data_id);\n  }\n  //set comment if not empty\n  if(form.value.comment != \"\"){\n    //setNewComment(id:number,id_from:number, comment:string){\n      //kome, od , comment\n    this.reputationService.setNewComment(this.data.data_id, this.userService.getCurrenSession().id_user ,form.value.comment );\n  }\n  this._snackBar.open(\"Success! Feedback score was added!\", \"close\", {\n    duration: 2000,\n  });\n  //close dialog\n  this.onCancel();\n\n}\n\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9ub3RpZmljYXRpb24tdGFicy9ub3RpZmljYXRpb24tcmVxdWVzdHMtZHJpdmVyL25vdGlmaWNhdGlvbi1yZXF1ZXN0cy1kcml2ZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\n\\n<section>\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"20px\\\">\\n        <mat-form-field>\\n            <mat-label>Filter Rides</mat-label>\\n            <input matInput type=\\\"text\\\" (keyup)=\\\"doFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n          </mat-form-field>\\n    </div> \\n\\n  \\n\\n<!-- property binding -->\\n<mat-table [dataSource]=\\\"notificationSource\\\" matSort >\\n \\n<!-- driver name -->\\n<ng-container matColumnDef=\\\"passenger_name\\\" >\\n  <mat-header-cell *matHeaderCellDef mat-sort-header>Passenger Name</mat-header-cell>\\n  <mat-cell *matCellDef=\\\"let element\\\">\\n      <a [routerLink]=\\\"['/profile']\\\" [queryParams]=\\\"{userID: element.id_passanger}\\\" (click)=\\\"onProfileUse(element.id_passanger)\\\">\\n        {{element.passengerName}}\\n      </a>\\n    </mat-cell>\\n</ng-container>\\n\\n<!-- ride name -->\\n<ng-container matColumnDef=\\\"ride_name\\\" >\\n    <mat-header-cell *matHeaderCellDef mat-sort-header>Ride Name</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\">{{ element.rideName }}</mat-cell>\\n  </ng-container>\\n\\n  <!-- location name -->\\n<ng-container matColumnDef=\\\"location\\\" >\\n    <mat-header-cell *matHeaderCellDef mat-sort-header>Location</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\">{{ element.locationToFrom }}</mat-cell>\\n  </ng-container>\\n\\n  <!-- approved name -->\\n  <ng-container matColumnDef=\\\"actions\\\" >\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Actions</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">\\n          <button mat-flat-button color=\\\"warn\\\"  (click)=\\\"onApprove(element.notification_id)\\\">Approve</button>\\n          <button mat-flat-button color=\\\"accent\\\"  (click)=\\\"onDismiss(element.notification_id)\\\">Dismiss</button>\\n      </mat-cell>\\n    </ng-container>\\n\\n\\n <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n <mat-row *matRowDef=\\\"let rows; columns: displayedColumns\\\"></mat-row>\\n</mat-table>\\n\\n<mat-paginator [pageSize]=\\\"3\\\" [pageSizeOptions]=\\\"[2,3,4,6,8]\\\"></mat-paginator>\\n\\n</section>\\n\"","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\nimport { DriveRidesService } from '../../../services/drive_rides.service';\nimport { UsersService } from '../../../services/users.service';\nimport { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\nimport { MatDialog } from '@angular/material';\nimport { NotificationsService } from '../../../services/notification.service';\nimport { Router } from \"@angular/router\";\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n\n@Component({\n  selector: 'app-notification-requests-driver',\n  templateUrl: './notification-requests-driver.component.html',\n  styleUrls: ['./notification-requests-driver.component.css']\n})\n\nexport class NotificationRequestsDriverComponent implements OnInit, AfterViewInit {\n  displayedColumns = [\"passenger_name\", \"ride_name\", \"location\", \"actions\"];\n  notificationSource = new MatTableDataSource<any>();\n\n  constructor(private driveRidesService : DriveRidesService,\n    private userService : UsersService,\n    private notificationService : NotificationsService, \n    public dialog: MatDialog,\n    private router: Router,\n    private _snackBar: MatSnackBar,) { }\n\n\n    @ViewChild(MatSort) sort : MatSort;\n    @ViewChild(MatPaginator) paginator : MatPaginator;\n\n  ngOnInit() {\n    this.setUpValues()\n  }\n\n  setUpValues(){\n    this.notificationSource.data  = this.notificationService.getNotificationsForSpecificDriverRequest(this.userService.getCurrenSession().id_user)\n    for (let elem in this.notificationSource.data){\n      let current_user = this.userService.getProfileData(this.notificationSource.data[elem].id_passanger);\n      let uniqueRide = this.driveRidesService.getUniqueRide(this.notificationSource.data[elem].ride_id);\n\n      let rideName = uniqueRide.name;\n      let locationToFrom = `${uniqueRide.start_location} - ${uniqueRide.end_location}`;\n      \n      let fname = current_user.fname;\n      let lname = current_user.lname;\n      this.notificationSource.data[elem][\"passengerName\"] = `${fname} ${lname}`;\n      this.notificationSource.data[elem][\"rideName\"] = rideName;\n      this.notificationSource.data[elem][\"locationToFrom\"] = locationToFrom;\n    }\n  }\n\n  ngAfterViewInit(){  \n    this.notificationSource.sort = this.sort;\n    this.notificationSource.paginator = this.paginator;\n  }\n  doFilter(filterValue: string){\n    this.notificationSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  onProfileUse(id:number){\n    this.router.navigateByUrl('/', {skipLocationChange: true}).then(()=>\n    this.router.navigate([\"/profile\", {userID: id} ]));\n  }\n\n  onApprove(notifyID:number){\n    //approve\n    this.notificationService.setRequestApprovedTrue(notifyID);\n    //add to the passenger to the list\n    let passengerID: number = this.notificationService.getPassengerIdFromNotification(notifyID);\n    let driveID    : number = this.notificationService.getRideIDFromNotification(notifyID);\n\n    let result = this.driveRidesService.addPassengerToDriveListIfThereIsFreeSpace(driveID,passengerID );\n\n    switch(result) { \n      case \"success\": { \n        this._snackBar.open(\"Success! You have approved the passanger\", \"close\", {\n          duration: 2000,\n        });\n         \n         break; \n      }\n      case \"aleardy_exist\": { \n        this._snackBar.open(\"Passanger is already registered!\", \"close\", {\n          duration: 2000,\n        });\n        \n        break; \n     } \n      case \"full\": { \n        this._snackBar.open(\"You can't do that! That ride is full!\", \"close\", {\n          duration: 2000,\n        });\n        \n         break; \n      }\n    } // switch end;\n\n    this.setUpValues(); // reset values in table\n\n  }\n\n  onDismiss(notifyID:number){\n    this.notificationService.setDissmissedTrue(notifyID);\n    this.setUpValues(); // reset values in table\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9ub3RpZmljYXRpb24tdGFicy9ub3RpZmljYXRpb24tcmVxdWVzdHMvbm90aWZpY2F0aW9uLXJlcXVlc3RzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\n\\n<section>\\n\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"20px\\\">\\n            <mat-form-field>\\n                <mat-label>Filter Rides</mat-label>\\n                <input matInput type=\\\"text\\\" (keyup)=\\\"doFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n              </mat-form-field>\\n        </div> \\n    \\n      \\n  \\n  <!-- property binding -->\\n  <mat-table [dataSource]=\\\"notificationSource\\\" matSort >\\n     \\n    <!-- driver name -->\\n    <ng-container matColumnDef=\\\"driver_name\\\" >\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Driver Name</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">\\n          <a [routerLink]=\\\"['/profile']\\\" [queryParams]=\\\"{userID: element.id_driver}\\\" (click)=\\\"onProfileUse(element.id_driver)\\\">\\n            {{element.driverName}}\\n          </a>\\n        </mat-cell>\\n    </ng-container>\\n\\n    <!-- ride name -->\\n    <ng-container matColumnDef=\\\"ride_name\\\" >\\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Ride Name</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let element\\\">{{ element.rideName }}</mat-cell>\\n      </ng-container>\\n\\n      <!-- location name -->\\n    <ng-container matColumnDef=\\\"location\\\" >\\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Location</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let element\\\">{{ element.locationToFrom }}</mat-cell>\\n      </ng-container>\\n\\n      <!-- approved name -->\\n      <ng-container matColumnDef=\\\"approved\\\" >\\n          <mat-header-cell *matHeaderCellDef mat-sort-header>Approved</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\">{{ element.approved }}</mat-cell>\\n        </ng-container>\\n  \\n  \\n     <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n     <mat-row *matRowDef=\\\"let rows; columns: displayedColumns\\\"></mat-row>\\n  </mat-table>\\n  \\n  <mat-paginator [pageSize]=\\\"3\\\" [pageSizeOptions]=\\\"[2,3,4,6,8]\\\"></mat-paginator>\\n  \\n  </section>\\n  \"","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\nimport { DriveRidesService } from '../../../services/drive_rides.service';\nimport { UsersService } from '../../../services/users.service';\nimport { AppComponent } from '../../../app.component';\nimport { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\nimport { MatDialog } from '@angular/material';\nimport { NotificationsService } from '../../../services/notification.service';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-notification-requests',\n  templateUrl: './notification-requests.component.html',\n  styleUrls: ['./notification-requests.component.css']\n})\nexport class NotificationRequestsComponent implements OnInit, AfterViewInit {\n  displayedColumns = [\"driver_name\", \"ride_name\" , \"location\" , \"approved\"];\n\n  notificationSource = new MatTableDataSource<any>();\n\n  @ViewChild(MatSort) sort : MatSort;\n  @ViewChild(MatPaginator) paginator : MatPaginator;\n\n  constructor(\n    private driveRidesService : DriveRidesService,\n    private userService : UsersService,\n    private notificationService : NotificationsService, \n    public dialog: MatDialog,\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n    this.notificationSource.data  = this.notificationService.getNotificationsForSpecificUserRequest(this.userService.getCurrenSession().id_user)\n    //this.notificationSource.data =  this.driveRidesService.getDriverRides(this.userService.getCurrenSession().id_user);\n    for (let elem in this.notificationSource.data){\n      let current_user = this.userService.getProfileData(this.notificationSource.data[elem].id_driver);\n      let uniqueRide = this.driveRidesService.getUniqueRide(this.notificationSource.data[elem].ride_id);\n\n      let rideName = uniqueRide.name;\n      let locationToFrom = `${uniqueRide.start_location} - ${uniqueRide.end_location}`;\n      \n\n      let fname = current_user.fname;\n      let lname = current_user.lname;\n      this.notificationSource.data[elem][\"driverName\"] = `${fname} ${lname}`;\n      this.notificationSource.data[elem][\"rideName\"] = rideName;\n      this.notificationSource.data[elem][\"locationToFrom\"] = locationToFrom;\n    }\n  }\n  ngAfterViewInit(){  \n    this.notificationSource.sort = this.sort;\n    this.notificationSource.paginator = this.paginator;\n  }\n  doFilter(filterValue: string){\n    this.notificationSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  onProfileUse(id:number){\n    this.router.navigateByUrl('/', {skipLocationChange: true}).then(()=>\n    this.router.navigate([\"/profile\", {userID: id} ]));\n  }\n\n}\n","module.exports = \".my-container{\\r\\n    margin: 50px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL25vdGlmaWNhdGlvbi10YWJzL25vdGlmaWNhdGlvbi10YWJzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0NBQ2hCIiwiZmlsZSI6InNyYy9hcHAvZGFzaGJvYXJkL25vdGlmaWNhdGlvbi10YWJzL25vdGlmaWNhdGlvbi10YWJzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktY29udGFpbmVye1xyXG4gICAgbWFyZ2luOiA1MHB4O1xyXG59Il19 */\"","module.exports = \"<section>\\n    <mat-tab-group class=\\\"my-container\\\" >\\n        <mat-tab label=\\\"Requests\\\" *ngIf=\\\"this.userService.getCurrenSession().acc_type == 'passenger'\\\">\\n            <ng-template matTabLabel>\\n                <span >Sent Requests</span>\\n            </ng-template>\\n          <app-notification-requests></app-notification-requests>\\n        </mat-tab>\\n\\n        <mat-tab label=\\\"Requests\\\" *ngIf=\\\"this.userService.getCurrenSession().acc_type == 'driver'\\\">\\n                <ng-template matTabLabel>\\n                    <span >Requests</span>\\n                </ng-template>\\n                <app-notification-requests-driver></app-notification-requests-driver>\\n            </mat-tab>\\n    \\n        <mat-tab label=\\\"Ended Rides\\\">\\n            <ng-template matTabLabel>\\n                <span>Ended Rides</span>\\n            </ng-template>\\n          <app-notification-ended-rides></app-notification-ended-rides>\\n        </mat-tab>\\n    </mat-tab-group>\\n</section>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { UsersService } from '../../services/users.service';\n\n@Component({\n  selector: 'app-notification-tabs',\n  templateUrl: './notification-tabs.component.html',\n  styleUrls: ['./notification-tabs.component.css']\n})\nexport class NotificationTabsComponent implements OnInit {\n\n  constructor(\n    private userService : UsersService,\n    private router: Router,\n    ) {\n  //___________________________________________ reddirect\n  if( this.userService.getCurrenSession().id_user == -1){\n    this.router.navigate([\"/\"]);\n   }\n //___________________________________________ reddirect end\n     }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".alert{\\r\\n    color: #721c24;\\r\\n    background-color: #f8d7da;\\r\\n    border-color: #f5c6cb;\\r\\n    position: relative;\\r\\n    padding: .75rem 1.25rem;\\r\\n    margin-bottom: 1rem;\\r\\n    border: 1px solid transparent;\\r\\n    border-top-color: transparent;\\r\\n    border-right-color: transparent;\\r\\n    border-bottom-color: transparent;\\r\\n    border-left-color: transparent;\\r\\n    border-radius: .25rem;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL3Byb2ZpbGUvZWRpdC1wcm9maWxlL2VkaXQtcHJvZmlsZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtJQUNmLDBCQUEwQjtJQUMxQixzQkFBc0I7SUFDdEIsbUJBQW1CO0lBQ25CLHdCQUF3QjtJQUN4QixvQkFBb0I7SUFDcEIsOEJBQThCO0lBQzlCLDhCQUE4QjtJQUM5QixnQ0FBZ0M7SUFDaEMsaUNBQWlDO0lBQ2pDLCtCQUErQjtJQUMvQixzQkFBc0I7Q0FDekIiLCJmaWxlIjoic3JjL2FwcC9kYXNoYm9hcmQvcHJvZmlsZS9lZGl0LXByb2ZpbGUvZWRpdC1wcm9maWxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWxlcnR7XHJcbiAgICBjb2xvcjogIzcyMWMyNDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmOGQ3ZGE7XHJcbiAgICBib3JkZXItY29sb3I6ICNmNWM2Y2I7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBwYWRkaW5nOiAuNzVyZW0gMS4yNXJlbTtcclxuICAgIG1hcmdpbi1ib3R0b206IDFyZW07XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlci10b3AtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyLWxlZnQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyLXJhZGl1czogLjI1cmVtO1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<mat-dialog-content>\\n    <section fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">        \\n            <form fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\"\\n            #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\">\\n            <!---------------------------------------------------------------------------------------------------------------------------------------->\\n            <mat-form-field appearance=\\\"outline\\\" floatPlaceholder=\\\"always\\\" floatLabel=\\\"always\\\" class=\\\"mat-form-field--no-underline\\\">\\n                <mat-label>Account type</mat-label>\\n              <input matInput placeholder style=\\\"display: none\\\">\\n              <mat-radio-group ngModel name=\\\"typeOfUser\\\" [(ngModel)]=\\\"currentUser.acc_type\\\" required #typeOfUserInput=\\\"ngModel\\\" fxLayout fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"20px\\\">\\n                <mat-radio-button value=\\\"driver\\\">Driver</mat-radio-button>\\n                <mat-radio-button value=\\\"passenger\\\">Passenger</mat-radio-button>\\n              </mat-radio-group>\\n            </mat-form-field>\\n        <!---------------------------------------------------------------------------------------------------------------------------------------->\\n        \\n            <mat-form-field appearance=\\\"outline\\\">\\n                <input type=\\\"text\\\" pattern=\\\"[A-Z]{1}[a-z]{2,20}\\\" matInput placeholder=\\\"First name\\\" [(ngModel)]=\\\"currentUser.fname\\\" name=\\\"firstName\\\" required #firstNameInput=\\\"ngModel\\\" > \\n                <mat-error *ngIf=\\\"firstNameInput.hasError('required')\\\">Please write Your first name.</mat-error>\\n                <mat-error *ngIf=\\\"!firstNameInput.hasError('required')\\\">First lether should be capital letter followed by at least 2 words</mat-error>\\n              </mat-form-field>\\n          <!---------------------------------------------------------------------------------------------------------------------------------------->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <input type=\\\"text\\\" pattern=\\\"[A-Z]{1}[a-z]{2,20}\\\" matInput placeholder=\\\"Last name\\\" [(ngModel)]=\\\"currentUser.lname\\\" name=\\\"lastName\\\" required #lastNameInput=\\\"ngModel\\\">\\n                <mat-error *ngIf=\\\"lastNameInput.hasError('required')\\\">Please write Your last name.</mat-error>\\n                <mat-error *ngIf=\\\"!lastNameInput.hasError('required')\\\">First lether should be capital letter followed by at least 2 words</mat-error>\\n              </mat-form-field>\\n          <!---------------------------------------------------------------------------------------------------------------------------------------->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <input type=\\\"tel\\\" pattern=\\\"[0]{1}[0-9]{9}\\\" matInput placeholder=\\\"Mobile phone number\\\" [(ngModel)]=\\\"currentUser.contact_phone\\\" name=\\\"phone\\\" required #phoneInput=\\\"ngModel\\\" minlength=\\\"6\\\">\\n                <mat-error *ngIf=\\\"phoneInput.hasError('required')\\\">Please write Your mobile number.</mat-error>\\n                <mat-error *ngIf=\\\"!phoneInput.hasError('required')\\\">Phone number should start with 0 followed by 9 digits afterwards</mat-error>\\n              </mat-form-field>\\n          <!---------------------------------------------------------------------------------------------------------------------------------------->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <input type=\\\"text\\\" matInput placeholder=\\\"Address\\\" [(ngModel)]=\\\"currentUser.contact_address\\\" name=\\\"address\\\" required #adressInput=\\\"ngModel\\\">\\n                <mat-error *ngIf=\\\"adressInput.hasError('required')\\\">Please write Your full address.</mat-error>\\n              </mat-form-field>\\n        \\n        <!---------------------------------------------------------------------------------------------------------------------------------------->\\n            <!-- <font *ngIf=\\\"emailInUse\\\" color=\\\"red\\\">Email already in use. Please enter another email address!</font> -->\\n            <mat-form-field appearance=\\\"outline\\\" hintLabel=\\\"This will be used for signing in.\\\">\\n                <input type=\\\"email\\\" matInput placeholder=\\\"Your email\\\" [(ngModel)]=\\\"currentUser.contact_email\\\" name=\\\"email\\\" email required #emailInput=\\\"ngModel\\\">\\n                <mat-error *ngIf=\\\"emailInput.hasError('required')\\\">Please write Your email address.</mat-error>\\n                <mat-error *ngIf=\\\"!emailInput.hasError('required')\\\">Please use the correct email format.</mat-error>\\n              </mat-form-field>\\n          <!---------------------------------------------------------------------------------------------------------------------------------------->\\n              <mat-form-field appearance=\\\"outline\\\" hintLabel=\\\"Please enter minimum 6 characters.\\\">\\n                <mat-label>Your password</mat-label>\\n                <input type=\\\"password\\\" matInput placeholder ngModel name=\\\"password\\\" [(ngModel)]=\\\"currentUser.password\\\" required minlength=\\\"6\\\" #passInput=\\\"ngModel\\\">\\n                <mat-hint align=\\\"end\\\">{{ passInput.value?.length }} /6 </mat-hint>\\n                <mat-error *ngIf=\\\"passInput.hasError('required')\\\">Please enter minimum 6 characters.</mat-error> \\n                <mat-error *ngIf=\\\"!passInput.hasError('required')\\\">Please enter minimum 6 characters.</mat-error> \\n              </mat-form-field>\\n          \\n          <div class=\\\"alert\\\" *ngIf=\\\"errorString !=''\\\">{{ errorString }}</div>\\n          <!---------------------------------------------------------------------------------------------------------------------------------------->\\n              <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"f.invalid\\\">\\n                EDIT\\n              </button>\\n              <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onCancel()\\\">\\n                  Cancel\\n                </button>\\n            </form>\\n        \\n    \\n      </section>\\n\\n\\n\\n</mat-dialog-content>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport {FormBuilder, FormGroup, Validators,NgForm } from '@angular/forms';\nimport {UsersService} from '../../../services/users.service';\n\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.css']\n})\nexport class EditProfileComponent implements OnInit {\n  private currentUser;\n  private errorString : string = \"\";\n  private userTEMP;\n\n  constructor( private dialogRef: MatDialogRef<EditProfileComponent>, @Inject(MAT_DIALOG_DATA) public data: any, private userService : UsersService,) {\n    this.userTEMP  = userService.getProfileData(data.userid);\n    this.currentUser = {id_user         : -1,\n      fname           : \"\",\n      lname           :\"\",\n      contact_email   : \"\",\n      contact_phone   :\"\",\n      contact_address :\"\",\n      password        :\"\",\n      acc_type        :\"driver\",};\n    Object.keys(this.userTEMP).forEach(key=>this.currentUser[key]=this.userTEMP[key]);\n  }\n\n   \n  ngOnInit() {\n  }\n\n  onCancel(){\n    this.dialogRef.close();\n  }\n  onSubmit(form : NgForm) {\n    Object.keys(this.currentUser).forEach(key=>this.userTEMP[key]=this.currentUser[key]);\n    /*\n    this.userService.updateUser({\n      id_user         : this.data.userid,       // later we are going to use this to put current logged in user\n        fname           : form.value.firstName,       // to simulate the SESSION on the backend\n        lname           : form.value.lastName,\n        contact_email   : form.value.email,\n        contact_phone   : form.value.phone,\n        contact_address : form.value.address,\n        password        : form.value.password,\n        acc_type        : form.value.typeOfUser\n    }); */\n    this.onCancel();\n  }\n\n}\n","module.exports = \".width-500px{\\r\\n    width: 500px;\\r\\n    max-width: 500px;\\r\\n}\\r\\n\\r\\n.green-text{\\r\\n    color: #009933;\\r\\n}\\r\\n\\r\\n.red-text{\\r\\n    color: #990000;\\r\\n}\\r\\n\\r\\n.gray-text{\\r\\n    color:#424040;\\r\\n}\\r\\n\\r\\n.sectionClass{\\r\\n    margin-top: 30px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL3Byb2ZpbGUvcHJvZmlsZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLGlCQUFpQjtDQUNwQjs7QUFFRDtJQUNJLGVBQWU7Q0FDbEI7O0FBQ0Q7SUFDSSxlQUFlO0NBQ2xCOztBQUNEO0lBQ0ksY0FBYztDQUNqQjs7QUFFRDtJQUNJLGlCQUFpQjtDQUNwQiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi53aWR0aC01MDBweHtcclxuICAgIHdpZHRoOiA1MDBweDtcclxuICAgIG1heC13aWR0aDogNTAwcHg7XHJcbn1cclxuXHJcbi5ncmVlbi10ZXh0e1xyXG4gICAgY29sb3I6ICMwMDk5MzM7XHJcbn1cclxuLnJlZC10ZXh0e1xyXG4gICAgY29sb3I6ICM5OTAwMDA7XHJcbn1cclxuLmdyYXktdGV4dHtcclxuICAgIGNvbG9yOiM0MjQwNDA7XHJcbn1cclxuXHJcbi5zZWN0aW9uQ2xhc3N7XHJcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG59Il19 */\"","module.exports = \"<section  fxLayoutAlign=\\\"center center\\\" fxLayout=\\\"column\\\" class=\\\"sectionClass\\\">\\n  <mat-card>\\n      <mat-card-header fxLayoutGap=\\\"100px\\\" >\\n          <div mat-card-avatar ><img mat-card-image src={{imgSRC}} class=\\\"resize-img\\\"/></div>\\n          <mat-card-title>{{userToShow.fname }} {{userToShow.lname }}</mat-card-title>\\n          <mat-card-subtitle>{{userToShow.acc_type}}</mat-card-subtitle>\\n       </mat-card-header>\\n       <mat-card-content>\\n          <button *ngIf=\\\"userIDtoShow == userService.getCurrenSession().id_user\\\" mat-stroked-button color=\\\"primary\\\"  (click)=\\\"editProfile()\\\">Edit</button>\\n          <mat-list >\\n              <mat-divider></mat-divider>\\n              <mat-list-item><mat-icon>star_rate</mat-icon>Raiting</mat-list-item>\\n              <mat-list-item class=\\\"green-text\\\">Positive {{repData?.rep_positive}}</mat-list-item>\\n              <mat-list-item class=\\\"red-text\\\">Negative {{repData?.rep_negative}}</mat-list-item>\\n              <mat-divider></mat-divider>\\n              \\n              <mat-list-item><mat-icon>mail_outline</mat-icon>Email:</mat-list-item>\\n              <p class=\\\"gray-text\\\" fxLayoutGap=\\\"100px\\\" fxLayoutAlign=\\\"center center\\\">{{userToShow.contact_email}}</p>\\n              <mat-divider></mat-divider>\\n              <mat-list-item><mat-icon>phone</mat-icon>Phone: </mat-list-item>\\n              <p class=\\\"gray-text\\\" fxLayoutGap=\\\"100px\\\" fxLayoutAlign=\\\"center center\\\">{{userToShow.contact_phone}}</p>\\n              <mat-divider></mat-divider>\\n              <mat-list-item><mat-icon>home</mat-icon>Address: </mat-list-item>\\n              <p class=\\\"gray-text\\\" fxLayoutGap=\\\"100px\\\" fxLayoutAlign=\\\"center center\\\">{{userToShow.contact_address}}</p>\\n            </mat-list>\\n       </mat-card-content> \\n\\n\\n       <h4>REVIEWS</h4>\\n       <div *ngIf=\\\"repData.rep_comment\\\">\\n       <div fxLayoutAlign=\\\"flex-start\\\" fxLayoutAlign=\\\"flex-start\\\"  role=\\\"list\\\" *ngFor=\\\"let item of repData.rep_comment; index as i;\\\">\\n          <mat-card>\\n              <mat-card-header fxLayoutGap=\\\"100px\\\" >\\n                  <a [routerLink]=\\\"['/profile']\\\" [queryParams]=\\\"{userID: item.id_user_from}\\\" (click)=\\\"reloadComponent(item.id_user_from)\\\">\\n                  {{userService.getProfileData(item.id_user_from).fname }} {{userService.getProfileData(item.id_user_from).lname }}\\n                </a>\\n                </mat-card-header>\\n                <mat-card-content>\\n                    {{item.comment}}\\n                </mat-card-content>\\n          </mat-card>\\n       </div>\\n    </div>\\n      </mat-card>\\n</section>\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AppComponent } from '../../app.component';\nimport { UsersService } from '../../services/users.service';\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { UsersModel } from '../../services/models/user.model';\nimport { ReputationService } from '../../services/reputation.service';\nimport {ReputationModel} from '../../services/models/reputation.model';\nimport { MatDialog } from '@angular/material';\n\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  userIDtoShow : number = -1;\n  userToShow :UsersModel | any;\n  imgSRC : string;\n  repData : ReputationModel;\n\n  constructor(private userService : UsersService,\n    private appComponent : AppComponent,\n    private router: Router,\n    private route: ActivatedRoute,\n    private repService: ReputationService,\n    public dialog: MatDialog,\n    ) {\n      let urlParse = this.router.url.split(\"=\");\n      if( typeof urlParse[1] != 'undefined' || urlParse[1] != null ){\n        this.userIDtoShow = Number(urlParse[1]);\n      }\n    /*this.route.queryParams.subscribe(params => {\n      console.log(this.router.url.split(\"=\")[1]);\n      if (!isNaN(Number(params['userID']))){\n        this.userIDtoShow = Number(params['userID']);\n      }  \n      });*/\n      if (this.userIDtoShow == -1 ){\n        this.userIDtoShow = userService.getCurrenSession().id_user;\n      }\n\n  this.userToShow = userService.getProfileData(this.userIDtoShow);\n  this.imgSRC = \"https://robohash.org/\"+this.userToShow.fname+\".png\";\n\n  this.repData = repService.getReputationOfOneUser(this.userIDtoShow);  \n   }\n\n  ngOnInit() {\n  }\n\n  editProfile(){\n    this.dialog.open(EditProfileComponent, {data: { userid: this.userIDtoShow }},);\n  }\n\n  reloadComponent(id){\n    this.router.navigateByUrl('/', {skipLocationChange: true}).then(()=>\n    this.router.navigate([\"/profile\", {userID: id} ]));\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC92aWV3LXBhc3NlbmdlcnMtcmlkZS1kaWFsb2cvdmlldy1wYXNzZW5nZXJzLXJpZGUtZGlhbG9nLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<section>\\n    Following passengers are registered for this ride:\\n    <div *ngFor=\\\"let item of passangersArray\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" >\\n        <a [routerLink]=\\\"['/profile']\\\" [queryParams]=\\\"{userID: item.pID}\\\" (click)=\\\"onPassengerView(item.pID)\\\">\\n          {{item.name}}\\n        </a>\\n    </div>\\n  \\n  \\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\">\\n      <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"onCancel()\\\" >\\n        CANCEL\\n      </button>\\n      </div>\\n  \\n  </section>\\n  \"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { DriveRidesService } from '../../services/drive_rides.service';\nimport { UsersService } from '../../services/users.service';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-view-passengers-ride-dialog',\n  templateUrl: './view-passengers-ride-dialog.component.html',\n  styleUrls: ['./view-passengers-ride-dialog.component.css']\n})\nexport class ViewPassengersRideDialogComponent implements OnInit {\n  private passangersArray = [];\n\n  constructor(private dialogRef: \n    MatDialogRef<ViewPassengersRideDialogComponent>,\n     @Inject(MAT_DIALOG_DATA) public data: any,\n      private driverService : DriveRidesService,\n      private usersService : UsersService,\n      private router: Router,\n     ) {\n      let passengerObjectArray = this.driverService.getPassangersArray(data.data_id);\n\n      for (let elem in passengerObjectArray){\n        let userData = this.usersService.getProfileData(passengerObjectArray[elem].id_user);\n\n        this.passangersArray.push({\n          pID : passengerObjectArray[elem].id_user,\n          name : `${userData.fname} ${userData.lname}`,\n        });\n      }\n\n      }\n\n  ngOnInit() {\n  }\n\n  onCancel(){this.dialogRef.close();}\n\n  onPassengerView(id:number){\n    this.router.navigate([\"/profile\", {userID: id} ]);\n    this.onCancel();\n  }\n}\n","module.exports = \"mat-form-field {\\n    width: 300px;\\n}\\nh1{\\n    margin-bottom: 20px;\\n}\\nsection{\\n    height:30%;\\n    width:50%;\\n\\t\\n\\ttop:0;\\n\\tbottom: 0;\\n\\tleft: 0;\\n\\tright: 0;\\n\\tmargin: auto;\\n}\\nimg{\\n    margin-top: 10px;\\n    margin-bottom: 10px;\\n    position: static;\\n    width: 33%;\\n    height: 33%;\\n    -o-object-fit: fill;\\n       object-fit: fill;\\n}\\n.alert{\\n    color: #721c24;\\n    background-color: #f8d7da;\\n    border-color: #f5c6cb;\\n    position: relative;\\n    padding: .75rem 1.25rem;\\n    margin-bottom: 1rem;\\n    border: 1px solid transparent;\\n    border-top-color: transparent;\\n    border-right-color: transparent;\\n    border-bottom-color: transparent;\\n    border-left-color: transparent;\\n    border-radius: .25rem;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRwYWdlL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0NBQ2hCO0FBQ0Q7SUFDSSxvQkFBb0I7Q0FDdkI7QUFDRDtJQUNJLFdBQVc7SUFDWCxVQUFVOztDQUViLE1BQU07Q0FDTixVQUFVO0NBQ1YsUUFBUTtDQUNSLFNBQVM7Q0FDVCxhQUFhO0NBQ2I7QUFDRDtJQUNJLGlCQUFpQjtJQUNqQixvQkFBb0I7SUFDcEIsaUJBQWlCO0lBQ2pCLFdBQVc7SUFDWCxZQUFZO0lBQ1osb0JBQWlCO09BQWpCLGlCQUFpQjtDQUNwQjtBQUVEO0lBQ0ksZUFBZTtJQUNmLDBCQUEwQjtJQUMxQixzQkFBc0I7SUFDdEIsbUJBQW1CO0lBQ25CLHdCQUF3QjtJQUN4QixvQkFBb0I7SUFDcEIsOEJBQThCO0lBQzlCLDhCQUE4QjtJQUM5QixnQ0FBZ0M7SUFDaEMsaUNBQWlDO0lBQ2pDLCtCQUErQjtJQUMvQixzQkFBc0I7Q0FDekIiLCJmaWxlIjoic3JjL2FwcC9mcm9udHBhZ2UvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxkIHtcbiAgICB3aWR0aDogMzAwcHg7XG59XG5oMXtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuc2VjdGlvbntcbiAgICBoZWlnaHQ6MzAlO1xuICAgIHdpZHRoOjUwJTtcblx0XG5cdHRvcDowO1xuXHRib3R0b206IDA7XG5cdGxlZnQ6IDA7XG5cdHJpZ2h0OiAwO1xuXHRtYXJnaW46IGF1dG87XG59XG5pbWd7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgIHBvc2l0aW9uOiBzdGF0aWM7XG4gICAgd2lkdGg6IDMzJTtcbiAgICBoZWlnaHQ6IDMzJTtcbiAgICBvYmplY3QtZml0OiBmaWxsO1xufVxuXG4uYWxlcnR7XG4gICAgY29sb3I6ICM3MjFjMjQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZDdkYTtcbiAgICBib3JkZXItY29sb3I6ICNmNWM2Y2I7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHBhZGRpbmc6IC43NXJlbSAxLjI1cmVtO1xuICAgIG1hcmdpbi1ib3R0b206IDFyZW07XG4gICAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLXRvcC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItYm90dG9tLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItbGVmdC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLXJhZGl1czogLjI1cmVtO1xufVxuIl19 */\"","module.exports = \"<section>\\n  <div  fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n      <img src=\\\"/assets/loginbackground.jpg\\\"/>\\n  </div>\\n  \\n  <h1 fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\"  fxLayoutAlign=\\\"center center\\\">Carpooling LOGIN page</h1>\\n  <form fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"center center\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\">\\n  <mat-form-field>\\n    <input type=\\\"email\\\" matInput placeholder=\\\"Your email\\\" ngModel name=\\\"email\\\" email required #emailInput=\\\"ngModel\\\">\\n    <mat-error *ngIf=\\\"emailInput.hasError('required')\\\">Field should not be left empty.</mat-error>\\n    <mat-error *ngIf=\\\"!emailInput.hasError('required')\\\">Please provide correct email format.</mat-error>\\n  </mat-form-field>\\n  <mat-form-field appearance=\\\"standard\\\"  hintLabel=\\\"Please provide minimum 6 characters.\\\">\\n    <input [(ngModel)]=password type=\\\"password\\\" matInput placeholder=\\\"Your password\\\" ngModel name=\\\"password\\\" required minlength=\\\"6\\\" #pwdInput=\\\"ngModel\\\">\\n    <mat-label>Your password</mat-label>\\n    <mat-hint align=\\\"end\\\">{{ pwdInput.value?.length }} / 6</mat-hint>\\n    <mat-error *ngIf=\\\"pwdInput.hasError('required')\\\">Please enter minimum 6 characters.</mat-error> \\n        <mat-error *ngIf=\\\"!pwdInput.hasError('required')\\\">Please enter minimum 6 characters.</mat-error> \\n  </mat-form-field> \\n  <div class=\\\"alert\\\" *ngIf=\\\"errorString !=''\\\">{{ errorString }}</div>\\n  <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"f.invalid\\\">Login</button>\\n  </form> \\n\\n  \\n  \\n  <p fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"center center\\\">\\n    Don't have an account\\n     <a routerLink=\\\"/signup\\\" >\\n      Consider registering here!\\n     </a></p> \\n  \\n  </section>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AppComponent } from '../../app.component';\nimport { UsersService } from '../../services/users.service';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n  errorString : string = \"\";\n\n constructor(private userService : UsersService, private appComponent : AppComponent,  private router: Router,) { \n }\n\n  ngOnInit() {\n  }\n\nonSubmit (form : NgForm) {\n    if (this.userService.validateLogin(form.value.email , form.value.password)){\n      this.appComponent.setLoggedIn(true);\n      this.errorString = \"\";\n      //___________________________________________ reddirect\n      if( this.userService.getCurrenSession().id_user != -1){\n        let reddirect_path = \"/\";\n        if(this.userService.getCurrenSession().acc_type == \"driver\"){\n         reddirect_path = \"/view-current-rides\";\n        } else { reddirect_path = \"/search-active-rides\"; }\n       this.router.navigateByUrl('/', {skipLocationChange: true}).then(()=>\n       this.router.navigate([reddirect_path]));\n      }\n      //___________________________________________ reddirect end\n    } else{\n      this.errorString = \"Invalid email and/or password provided!\";\n    }\n}\n    \n}\n","module.exports = \"mat-form-field {\\n    width: 300px;\\n}\\n\\nh1{\\n    margin-bottom: 20px;\\n}\\n\\nsection{\\n    height:30%;\\n    width:50%;\\n\\t\\n\\ttop:0;\\n\\tbottom: 0;\\n\\tleft: 0;\\n\\tright: 0;\\n\\tmargin: auto;\\n}\\n\\nimg{\\n    margin-top: 10px;\\n    margin-bottom: 10px;\\n    position: static;\\n    width: 33%;\\n    height: 33%;\\n    -o-object-fit: fill;\\n       object-fit: fill;\\n}\\n\\n.alert{\\n    color: #721c24;\\n    background-color: #f8d7da;\\n    border-color: #f5c6cb;\\n    position: relative;\\n    padding: .75rem 1.25rem;\\n    margin-bottom: 1rem;\\n    border: 1px solid transparent;\\n    border-top-color: transparent;\\n    border-right-color: transparent;\\n    border-bottom-color: transparent;\\n    border-left-color: transparent;\\n    border-radius: .25rem;\\n}\\n\\n.section-css{\\n    margin-top: 50px;\\n}\\n\\n.pClass{\\n    margin-bottom: 100px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRwYWdlL3NpZ251cC9zaWdudXAuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7Q0FDaEI7O0FBRUQ7SUFDSSxvQkFBb0I7Q0FDdkI7O0FBRUQ7SUFDSSxXQUFXO0lBQ1gsVUFBVTs7Q0FFYixNQUFNO0NBQ04sVUFBVTtDQUNWLFFBQVE7Q0FDUixTQUFTO0NBQ1QsYUFBYTtDQUNiOztBQUNEO0lBQ0ksaUJBQWlCO0lBQ2pCLG9CQUFvQjtJQUNwQixpQkFBaUI7SUFDakIsV0FBVztJQUNYLFlBQVk7SUFDWixvQkFBaUI7T0FBakIsaUJBQWlCO0NBQ3BCOztBQUVEO0lBQ0ksZUFBZTtJQUNmLDBCQUEwQjtJQUMxQixzQkFBc0I7SUFDdEIsbUJBQW1CO0lBQ25CLHdCQUF3QjtJQUN4QixvQkFBb0I7SUFDcEIsOEJBQThCO0lBQzlCLDhCQUE4QjtJQUM5QixnQ0FBZ0M7SUFDaEMsaUNBQWlDO0lBQ2pDLCtCQUErQjtJQUMvQixzQkFBc0I7Q0FDekI7O0FBQ0Q7SUFDSSxpQkFBaUI7Q0FDcEI7O0FBQ0Q7SUFDSSxxQkFBcUI7Q0FDeEIiLCJmaWxlIjoic3JjL2FwcC9mcm9udHBhZ2Uvc2lnbnVwL3NpZ251cC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQge1xuICAgIHdpZHRoOiAzMDBweDtcbn1cblxuaDF7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuc2VjdGlvbntcbiAgICBoZWlnaHQ6MzAlO1xuICAgIHdpZHRoOjUwJTtcblx0XG5cdHRvcDowO1xuXHRib3R0b206IDA7XG5cdGxlZnQ6IDA7XG5cdHJpZ2h0OiAwO1xuXHRtYXJnaW46IGF1dG87XG59XG5pbWd7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgIHBvc2l0aW9uOiBzdGF0aWM7XG4gICAgd2lkdGg6IDMzJTtcbiAgICBoZWlnaHQ6IDMzJTtcbiAgICBvYmplY3QtZml0OiBmaWxsO1xufVxuXG4uYWxlcnR7XG4gICAgY29sb3I6ICM3MjFjMjQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZDdkYTtcbiAgICBib3JkZXItY29sb3I6ICNmNWM2Y2I7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHBhZGRpbmc6IC43NXJlbSAxLjI1cmVtO1xuICAgIG1hcmdpbi1ib3R0b206IDFyZW07XG4gICAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLXRvcC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItYm90dG9tLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItbGVmdC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLXJhZGl1czogLjI1cmVtO1xufVxuLnNlY3Rpb24tY3Nze1xuICAgIG1hcmdpbi10b3A6IDUwcHg7XG59XG4ucENsYXNze1xuICAgIG1hcmdpbi1ib3R0b206IDEwMHB4O1xufVxuIl19 */\"","module.exports = \"<section class=\\\"section-css\\\">\\n    <div  fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n        <img src=\\\"/assets/registerImage.jpg\\\"/>\\n    </div>\\n    <h1 fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\"  fxLayoutAlign=\\\"center center\\\">Carpooling REGISTER page</h1>\\n\\n    <form fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\"\\n    #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\">\\n    <!---------------------------------------------------------------------------------------------------------------------------------------->\\n    <mat-form-field appearance=\\\"outline\\\" floatPlaceholder=\\\"always\\\" floatLabel=\\\"always\\\" class=\\\"mat-form-field--no-underline\\\">\\n        <mat-label>Account type</mat-label>\\n      <input matInput placeholder style=\\\"display: none\\\">\\n      <mat-radio-group ngModel name=\\\"typeOfUser\\\" [(ngModel)]=typeOfUser required #typeOfUserInput=\\\"ngModel\\\" fxLayout fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"20px\\\">\\n        <mat-radio-button value=\\\"driver\\\">Driver</mat-radio-button>\\n        <mat-radio-button value=\\\"passenger\\\">Passenger</mat-radio-button>\\n      </mat-radio-group>\\n    </mat-form-field>\\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n\\n    <mat-form-field>\\n        <input type=\\\"text\\\" pattern=\\\"[A-Z]{1}[a-z]{2,20}\\\" matInput placeholder=\\\"First name\\\" ngModel name=\\\"firstName\\\" required #firstNameInput=\\\"ngModel\\\" > \\n        <mat-error *ngIf=\\\"firstNameInput.hasError('required')\\\">Please write Your first name.</mat-error>\\n        <mat-error *ngIf=\\\"!firstNameInput.hasError('required')\\\">First lether should be capital letter followed by at least 2 words</mat-error>\\n      </mat-form-field>\\n  <!---------------------------------------------------------------------------------------------------------------------------------------->\\n      <mat-form-field>\\n        <input type=\\\"text\\\" pattern=\\\"[A-Z]{1}[a-z]{2,20}\\\" matInput placeholder=\\\"Last name\\\" ngModel name=\\\"lastName\\\" required #lastNameInput=\\\"ngModel\\\">\\n        <mat-error *ngIf=\\\"lastNameInput.hasError('required')\\\">Please write Your last name.</mat-error>\\n        <mat-error *ngIf=\\\"!lastNameInput.hasError('required')\\\">First lether should be capital letter followed by at least 2 words</mat-error>\\n      </mat-form-field>\\n  <!---------------------------------------------------------------------------------------------------------------------------------------->\\n      <mat-form-field>\\n        <input type=\\\"tel\\\" pattern=\\\"[0]{1}[0-9]{9}\\\" matInput placeholder=\\\"Mobile phone number\\\" ngModel name=\\\"phone\\\" required #phoneInput=\\\"ngModel\\\" minlength=\\\"6\\\">\\n        <mat-error *ngIf=\\\"phoneInput.hasError('required')\\\">Please write Your mobile number.</mat-error>\\n        <mat-error *ngIf=\\\"!phoneInput.hasError('required')\\\">Phone number should start with 0 followed by 9 digits afterwards</mat-error>\\n      </mat-form-field>\\n  <!---------------------------------------------------------------------------------------------------------------------------------------->\\n      <mat-form-field>\\n        <input type=\\\"text\\\" matInput placeholder=\\\"Address\\\" ngModel name=\\\"address\\\" required #adressInput=\\\"ngModel\\\">\\n        <mat-error *ngIf=\\\"adressInput.hasError('required')\\\">Please write Your full address.</mat-error>\\n      </mat-form-field>\\n\\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n    <!-- <font *ngIf=\\\"emailInUse\\\" color=\\\"red\\\">Email already in use. Please enter another email address!</font> -->\\n    <mat-form-field hintLabel=\\\"This will be used for signing in.\\\">\\n        <input type=\\\"email\\\" matInput placeholder=\\\"Your email\\\" ngModel name=\\\"email\\\" email required #emailInput=\\\"ngModel\\\">\\n        <mat-error *ngIf=\\\"emailInput.hasError('required')\\\">Please write Your email address.</mat-error>\\n        <mat-error *ngIf=\\\"!emailInput.hasError('required')\\\">Please use the correct email format.</mat-error>\\n      </mat-form-field>\\n  <!---------------------------------------------------------------------------------------------------------------------------------------->\\n      <mat-form-field appearance=\\\"standard\\\" hintLabel=\\\"Please enter minimum 6 characters.\\\">\\n        <mat-label>Your password</mat-label>\\n        <input type=\\\"password\\\" matInput placeholder ngModel name=\\\"password\\\" [(ngModel)]=password required minlength=\\\"6\\\" #passInput=\\\"ngModel\\\">\\n        <mat-hint align=\\\"end\\\">{{ passInput.value?.length }} /6 </mat-hint>\\n        <mat-error *ngIf=\\\"passInput.hasError('required')\\\">Please enter minimum 6 characters.</mat-error> \\n        <mat-error *ngIf=\\\"!passInput.hasError('required')\\\">Please enter minimum 6 characters.</mat-error> \\n      </mat-form-field>\\n  <!---------------------------------------------------------------------------------------------------------------------------------------->\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\">\\n      <mat-checkbox color=\\\"primary\\\" ngModel name=\\\"acceptance\\\" required></mat-checkbox>\\n      <!-- I accept the <font face=\\\"verdana\\\" color=\\\"blue\\\" (click)=\\\"onTos()\\\"><u>terms and conditions</u></font> of use. -->\\n      I accept the <a href=\\\"javascript:;\\\" (click)=\\\"onTos()\\\">terms and conditions</a> of use.\\n    </div>\\n  \\n  <div class=\\\"alert\\\" *ngIf=\\\"errorString !=''\\\">{{ errorString }}</div>\\n  <!---------------------------------------------------------------------------------------------------------------------------------------->\\n      <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"f.invalid\\\">\\n        Sign up!\\n      </button>\\n    </form>\\n\\n\\n<p fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"pClass\\\">\\n    Already have an account?\\n     <a routerLink=\\\"/\\\" >\\n      Consider to login here!\\n     </a></p> \\n</section>\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AppComponent } from '../../app.component';\nimport { UsersService } from '../../services/users.service';\nimport { ReputationService } from '../../services/reputation.service';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  errorString : string = \"\";\n\n  constructor(private router : Router,private userService : UsersService, private appComponent : AppComponent, private repService : ReputationService) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(form : NgForm) {\n    if(!this.userService.doesEmailExists(form.value.email)){\n      /*\n      in_fname:string,\n        in_lname:string,\n        in_contact_email:string,\n        in_contact_phone:string,\n        in_contact_address:string,\n        in_password:string,\n        in_acc_type:string,){*/\n      let newID = this.userService.addUser(\n        form.value.firstName,\n        form.value.lastName,\n          form.value.email,\n          form.value.phone,\n          form.value.address,\n          form.value.password,\n          form.value.typeOfUser\n        );\n      this.errorString = \"\";\n      this.appComponent.setLoggedIn(true);\n      this.userService.validateLogin(form.value.email,form.value.password );\n      this.repService.initReputation(newID);\n\n      //___________________________________________ reddirect\n      if( this.userService.getCurrenSession().id_user != -1){\n        let reddirect_path = \"/\";\n        if(this.userService.getCurrenSession().acc_type == \"driver\"){\n         reddirect_path = \"/view-current-rides\";\n        } else { reddirect_path = \"/search-active-rides\"; }\n       this.router.navigateByUrl('/', {skipLocationChange: true}).then(()=>\n       this.router.navigate([reddirect_path]));\n      }\n      //___________________________________________ reddirect end\n\n    } else{\n      this.errorString = \"This email already exist!\";\n      }\n  }\n}\n","/* Modul za registraciju Angular Material komponenti */\r\n\r\nimport { NgModule } from '../../node_modules/@angular/core';\r\nimport { MatButtonModule, \r\n         MatIconModule,\r\n         MatFormFieldModule, \r\n         MatInputModule, \r\n         MatDatepickerModule,\r\n         MatNativeDateModule, \r\n         MatCheckboxModule, \r\n         MatSidenavModule, \r\n         MatToolbarModule,\r\n         MatListModule,\r\n         MatTabsModule, \r\n         MatCardModule,\r\n         MatSelectModule,\r\n         MatProgressSpinnerModule,\r\n         MatTableModule,\r\n         MatSortModule,\r\n         MatPaginatorModule,\r\n         MatRadioModule,\r\n         MatMenuModule,\r\n         MatDividerModule,\r\n         MatDialogModule,\r\n         MatSnackBarModule,\r\n         MatSlideToggleModule\r\n         \r\n        } from '@angular/material';\r\n\r\nconst matModules = [\r\n        MatButtonModule, \r\n        MatIconModule, \r\n        MatFormFieldModule, \r\n        MatInputModule, \r\n        MatDatepickerModule, \r\n        MatNativeDateModule, \r\n        MatCheckboxModule, \r\n        MatSidenavModule,\r\n        MatToolbarModule,\r\n        MatListModule,\r\n        MatTabsModule,\r\n        MatCardModule,\r\n        MatSelectModule,\r\n        MatProgressSpinnerModule,\r\n        MatTableModule,\r\n        MatSortModule,\r\n        MatPaginatorModule,\r\n        MatRadioModule,\r\n        MatMenuModule,\r\n        MatDividerModule,\r\n        MatDialogModule,\r\n        MatSnackBarModule,\r\n        MatSlideToggleModule\r\n        ]\r\n\r\n@NgModule ({\r\nimports: [...matModules ],\r\nexports: [ ...matModules ]\r\n})\r\n\r\nexport class MaterialModule {}\r\n\r\n","import { NgModule } from '../../node_modules/@angular/core';\r\nimport {Routes, RouterModule } from '@angular/router';\r\n\r\n// Kreiraju se automatski prilikom navođenja komponenti u nizu rute ispod\r\nimport { LoginComponent } from './frontpage/login/login.component';\r\nimport { SignupComponent } from './frontpage/signup/signup.component';\r\nimport { ProfileComponent } from './dashboard/profile/profile.component';\r\nimport { ViewCurrentRidesComponent } from './dashboard/dashboard_driver/view-current-rides/view-current-rides.component';\r\nimport { SearchActiveRidesComponent } from './dashboard/dashboard_passenger/search-active-rides/search-active-rides.component';\r\nimport { NotificationTabsComponent } from './dashboard/notification-tabs/notification-tabs.component';\r\n\r\nconst rute: Routes = [\r\n{path : '',                     component: LoginComponent ,pathMatch: 'full' },\r\n{path : 'signup',               component: SignupComponent },\r\n{path : 'profile',              component: ProfileComponent },\r\n{path : 'view-current-rides',   component: ViewCurrentRidesComponent },\r\n{path : 'search-active-rides' , component: SearchActiveRidesComponent },\r\n{path : 'notifications' ,       component: NotificationTabsComponent}\r\n];\r\n\r\n@NgModule ({\r\n\r\n    imports: [RouterModule.forRoot(rute)],\r\n    exports: [RouterModule]\r\n\r\n})\r\n\r\nexport class RoutingModule {}\r\n","import { DriveRidesModel } from './models/drive-rides.model';\r\nimport { DriveRidesStopsModel } from './models/drive-rides.model';\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class DriveRidesService {\r\n    private driveRideList : Array<DriveRidesModel> = [\r\n        {\r\n            id_drive_rides  : 1,\r\n            id_driver       : 2,\r\n            name            : \"drive 1\",\r\n            start_location  : \"start loc1\",\r\n            end_location    : \"end loc 1\",\r\n            departure_time  : \"10:30\",\r\n            start_time      : \"10:30\",\r\n            end_time        : \"11:30\",\r\n            drive_ride_status :  'ongoing',\r\n            passengers_limit  : 5,\r\n            current_passengers_number : 2,\r\n            current_passengers_data : [\r\n                {id_user : 1},\r\n                {id_user : 3}\r\n            ],\r\n            drive_ride_stops        : [\r\n                {stop_name : \"stop1\"},\r\n                {stop_name : \"stop2\"}\r\n            ],\r\n            date : new Date()\r\n        } ,\r\n        {\r\n            id_drive_rides  : 2,\r\n            id_driver       : 2,\r\n            name            : \"drive 2\",\r\n            start_location  : \"start loc2\",\r\n            end_location    : \"end loc 2\",\r\n            departure_time  : \"12:30\",\r\n            start_time      : \"12:30\",\r\n            end_time        : \"13:30\",\r\n            drive_ride_status :  'ended',\r\n            passengers_limit  : 5,\r\n            current_passengers_number : 1,\r\n            current_passengers_data : [\r\n                {id_user : 1}\r\n            ],\r\n            drive_ride_stops        : [\r\n                {stop_name : \"stop1\"},\r\n                {stop_name : \"stop2\"}\r\n            ],\r\n            date : new Date()\r\n        },{\r\n            id_drive_rides  : 3,\r\n            id_driver       : 2,\r\n            name            : \"drive3\",\r\n            start_location  : \"start loc2\",\r\n            end_location    : \"end loc 2\",\r\n            departure_time  : \"01:30\",\r\n            start_time      : \"03:30\",\r\n            end_time        : \"03:30\",\r\n            drive_ride_status :  'ongoing',\r\n            passengers_limit  : 5,\r\n            current_passengers_number : 0,\r\n            current_passengers_data : [],\r\n            drive_ride_stops        : [\r\n                {stop_name : \"stop1\"},\r\n                {stop_name : \"stop2\"}\r\n            ],\r\n            date : new Date()\r\n        }\r\n    ]\r\n\r\n    setDriveRide(\r\n        id_driver       : number,\r\n        name            : string,\r\n        start_location  : string,\r\n        end_location    : string,\r\n        start_time      : string,\r\n        end_time        : string,\r\n        passengers_limit  : number,\r\n        date  : Date,\r\n        drive_ride_stops        : Array<DriveRidesStopsModel>,\r\n        ){\r\n            \r\n        const newID =  this.driveRideList[this.driveRideList.length - 1].id_drive_rides + 1;\r\n\r\n        this.driveRideList.push({\r\n            id_drive_rides  : newID,\r\n            id_driver       : id_driver,\r\n            name            : name,\r\n            start_location  : start_location,\r\n            end_location    : end_location,\r\n            departure_time  : \"\",\r\n            start_time      : start_time,\r\n            end_time        : end_time,\r\n            drive_ride_status :   'ongoing',\r\n            passengers_limit  : passengers_limit,\r\n            current_passengers_number : 0,\r\n            current_passengers_data : [],\r\n            drive_ride_stops        : drive_ride_stops,\r\n            date  : date\r\n        })\r\n    }\r\n\r\n    getDriverRides(id_driver){\r\n        let driveRideList2 : Array<DriveRidesModel> = []\r\n        for (var i=0 ; i < this.driveRideList.length ; i++){\r\n            if (this.driveRideList[i][\"id_driver\"] == id_driver) {\r\n                driveRideList2.push(this.driveRideList[i]);\r\n            }\r\n        }\r\n    return driveRideList2;\r\n    }\r\n\r\n    getUniqueRide(id_ride:number){\r\n        for (var i=0 ; i < this.driveRideList.length ; i++){\r\n            if (this.driveRideList[i][\"id_drive_rides\"] == id_ride) {\r\n                return this.driveRideList[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    removeUniqueRide(id_ride:number){\r\n        let filtered = this.driveRideList.filter(function(el) { return el.id_drive_rides != id_ride; }); \r\n        this.driveRideList = filtered;\r\n    }\r\n\r\n    getPassangersArray(id_drive:number){\r\n        for (var i=0 ; i < this.driveRideList.length ; i++){\r\n            if (this.driveRideList[i][\"id_drive_rides\"] == id_drive) {\r\n                return this.driveRideList[i][\"current_passengers_data\"];\r\n            }\r\n        }\r\n    }\r\n\r\n    getStopsArray(id_drive:number){\r\n        for (var i=0 ; i < this.driveRideList.length ; i++){\r\n            if (this.driveRideList[i][\"id_drive_rides\"] == id_drive) {\r\n                return this.driveRideList[i][\"drive_ride_stops\"];\r\n            }\r\n        }\r\n    }\r\n\r\n    getOngoingDrives(){\r\n        let returnDriveRideList : Array<DriveRidesModel> = [];\r\n        for (var i=0 ; i < this.driveRideList.length ; i++){\r\n            if (this.driveRideList[i][\"drive_ride_status\"] == 'ongoing') {\r\n                returnDriveRideList.push(this.driveRideList[i]);\r\n            }\r\n        }\r\n        return returnDriveRideList;\r\n    }\r\n\r\n    getSpecificInactivePassengerRides(pID:number){\r\n        let returnDriveRideList : Array<DriveRidesModel> = [];\r\n        \r\n        for (var i=0 ; i < this.driveRideList.length ; i++){\r\n            if (this.driveRideList[i][\"drive_ride_status\"] != 'ongoing'){\r\n                for (var j =0; j <  this.driveRideList[i].current_passengers_data.length;j++){\r\n                    if(this.driveRideList[i].current_passengers_data[j][\"id_user\"] == pID){\r\n                        returnDriveRideList.push(this.driveRideList[i])\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return returnDriveRideList;\r\n    }\r\n\r\n    addPassengerToDriveListIfThereIsFreeSpace(in_id_drive : number , in_id_pass : number ){\r\n        for (var i=0 ; i < this.driveRideList.length ; i++){\r\n            if (this.driveRideList[i][\"id_drive_rides\"] == in_id_drive){\r\n                if(this.driveRideList[i][\"current_passengers_number\"] < this.driveRideList[i][\"passengers_limit\"]){\r\n                    for (let elem in this.driveRideList[i][\"current_passengers_data\"]){\r\n                        if (this.driveRideList[i][\"current_passengers_data\"][elem].id_user == in_id_pass){\r\n                            return \"aleardy_exist\";\r\n                        }\r\n                      }\r\n                      this.driveRideList[i][\"current_passengers_data\"].push(\r\n                          {id_user : in_id_pass}\r\n                      );\r\n                      this.driveRideList[i][\"current_passengers_number\"] +=1;\r\n                      return \"success\";\r\n                } else {\r\n                    return \"full\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    isRequestAvailableForUniqueUser(in_id_drive : number , in_id_pass : number ){\r\n        console.log(\"in_id_pass \" + in_id_pass)\r\n        console.log(\"in_id_drive \" + in_id_drive)\r\n        for (var i=0 ; i < this.driveRideList.length ; i++){\r\n            if (this.driveRideList[i][\"id_drive_rides\"] == in_id_drive){\r\n                if(this.driveRideList[i][\"current_passengers_number\"] < this.driveRideList[i][\"passengers_limit\"]){\r\n                    for (let elem in this.driveRideList[i][\"current_passengers_data\"]){\r\n                        if (this.driveRideList[i][\"current_passengers_data\"][elem].id_user == in_id_pass){\r\n                            return \"aleardy_exist\";\r\n                        }\r\n                      }\r\n                      return \"success\";\r\n                } else {\r\n                    return \"full\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n}","import { NotificationsModel } from './models/notifications.model';\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class NotificationsService {\r\n    private notificationList : Array<NotificationsModel> = [\r\n        {\r\n            notification_id : 1,\r\n            id_passanger : 1,\r\n            id_driver   : 2,\r\n            type: 'request',\r\n            approved : false,\r\n            dismissed_by_driver: false,\r\n            ride_id: 1,\r\n        },\r\n        {\r\n            notification_id : 2,\r\n            id_passanger : 5,\r\n            id_driver   : 2,\r\n            type: 'request',\r\n            approved : false,\r\n            dismissed_by_driver: false,\r\n            ride_id: 3,\r\n        },\r\n        {\r\n            notification_id : 3,\r\n            id_passanger : 1,\r\n            id_driver   : 2,\r\n            type: 'ride_end',\r\n            ride_end_rated_driver : false,\r\n            ride_end_rated_passenger : false,\r\n            ride_id: 1,\r\n        }\r\n    ];\r\n    // ------------------------------------------------------------------------------------\r\n    setNewRequest(in_id_pass : number, in_id_driver : number, ride_id: number){\r\n    const newID =  this.notificationList[this.notificationList.length - 1].notification_id + 1;\r\n       this.notificationList.push(\r\n            {\r\n                ride_id : ride_id,\r\n                notification_id : newID,\r\n                id_passanger : in_id_pass,\r\n                id_driver   : in_id_driver,\r\n                type: 'request',\r\n                approved : false,\r\n                dismissed_by_driver: false\r\n            }\r\n        )\r\n    }\r\n    // ------------------------------------------------------------------------------------\r\n    setNewDriveEnd(in_id_pass : number, in_id_driver : number, ride_id: number){\r\n        const newID =  this.notificationList[this.notificationList.length - 1].notification_id + 1;\r\n        this.notificationList.push(\r\n             {\r\n                ride_id : ride_id,\r\n                 notification_id : newID,\r\n                 id_passanger : in_id_pass,\r\n                 id_driver   : in_id_driver,\r\n                 type: 'ride_end',\r\n                 ride_end_rated_driver : false,\r\n                 ride_end_rated_passenger : false,\r\n             }\r\n         )\r\n     }\r\n\r\n\r\n     // ------------------------------------------------------------------------------------\r\n     setRequestApprovedTrue(notiID:number){ //approve = true\r\n        for (var i=0 ; i < this.notificationList.length ; i++){\r\n            if(this.notificationList[i][\"notification_id\"] == notiID){\r\n                this.notificationList[i][\"approved\"] = true;\r\n            }\r\n        }        \r\n     }\r\n     // ------------------------------------------------------------------------------------\r\n     setDissmissedTrue(notiID:number){ //dismissed_by_driver = true\r\n        for (var i=0 ; i < this.notificationList.length ; i++){\r\n            if(this.notificationList[i][\"notification_id\"] == notiID){\r\n                this.notificationList[i][\"dismissed_by_driver\"] = true;\r\n            }\r\n        }\r\n    }\r\n     \r\n    // ------------------------------------------------------------------------------------\r\n    getNotificationsForSpecificUserRequest(in_id:number){\r\n        let returnList  : Array<NotificationsModel> = [];\r\n        for (var i=0 ; i < this.notificationList.length ; i++){\r\n            if(this.notificationList[i][\"type\"] == \"request\"){\r\n                if (this.notificationList[i][\"id_passanger\"] == in_id) {\r\n                    returnList.push(this.notificationList[i]);\r\n                }\r\n            }\r\n        }\r\n        return returnList;\r\n   }\r\n\r\n   getNotificationsForSpecificDriverRequest(in_id : number){\r\n    let returnList  : Array<NotificationsModel> = [];\r\n    for (var i=0 ; i < this.notificationList.length ; i++){\r\n        if(this.notificationList[i][\"type\"] == \"request\"){\r\n            if (this.notificationList[i][\"id_driver\"] == in_id) {\r\n                if(!this.notificationList[i][\"dismissed_by_driver\"] && !this.notificationList[i][\"approved\"] )\r\n                returnList.push(this.notificationList[i]);\r\n            }\r\n        }\r\n    }\r\n    return returnList;\r\n   }\r\n\r\n   getNotificationsForSpecificUserEndedRides(in_id:number){\r\n    let returnList  : Array<NotificationsModel> = [];\r\n    for (var i=0 ; i < this.notificationList.length ; i++){\r\n        if(this.notificationList[i][\"type\"] == \"ride_end\"){\r\n            if (this.notificationList[i][\"id_passanger\"] == in_id && this.notificationList[i][\"ride_end_rated_passenger\"] == false ) {\r\n                returnList.push(this.notificationList[i]);\r\n            }else\r\n            if (this.notificationList[i][\"id_driver\"] == in_id && this.notificationList[i][\"ride_end_rated_driver\"] == false  ){\r\n                returnList.push(this.notificationList[i]);\r\n            }\r\n        }\r\n    }\r\n    return returnList;\r\n   }\r\n\r\n   setRideEndRatedDriver(id:number){\r\n    for (var i=0 ; i < this.notificationList.length ; i++){\r\n        if(this.notificationList[i][\"notification_id\"] == id){\r\n            this.notificationList[i][\"ride_end_rated_driver\"] = true;\r\n        }\r\n    }\r\n   }\r\n\r\n   setRideEndRatedPassenger(id:number){\r\n    for (var i=0 ; i < this.notificationList.length ; i++){\r\n        if(this.notificationList[i][\"notification_id\"] == id){\r\n            this.notificationList[i][\"ride_end_rated_passenger\"] = true;\r\n            }\r\n        }\r\n   }\r\n\r\n   getPassengerIdFromNotification(in_id : number){\r\n    for (var i=0 ; i < this.notificationList.length ; i++){\r\n        if(this.notificationList[i][\"notification_id\"] == in_id){\r\n            return this.notificationList[i][\"id_passanger\"];\r\n            }\r\n        }\r\n    }\r\n    \r\n    getRideIDFromNotification(in_id : number){\r\n        for (var i=0 ; i < this.notificationList.length ; i++){\r\n            if(this.notificationList[i][\"notification_id\"] == in_id){\r\n                return this.notificationList[i][\"ride_id\"];\r\n                }\r\n            }\r\n        }\r\n}","import { ReputationModel } from './models/reputation.model';\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class ReputationService {\r\n    private repList : Array<ReputationModel> = [\r\n        {\r\n            id_reputation   : 1,\r\n            id_user         : 1,\r\n            rep_positive    : 4,\r\n            rep_negative    : 0,\r\n            rep_comment     : [{\r\n                    id_user_from: 2,\r\n                    comment: \"great ride!\"\r\n                }, {\r\n                    id_user_from: 3,\r\n                    comment: \"bad ride!\"\r\n                }],\r\n        },\r\n        {\r\n            id_reputation   : 2,\r\n            id_user         : 2,\r\n            rep_positive    : 1,\r\n            rep_negative    : 2,\r\n            rep_comment     : [{\r\n                id_user_from: 1,\r\n                comment: \"awesome ride!\"\r\n            }, {\r\n                id_user_from: 3,\r\n                comment: \"great!\"\r\n            }],\r\n        },\r\n        {\r\n            id_reputation   : 3,\r\n            id_user         : 3,\r\n            rep_positive    : 0,\r\n            rep_negative    : 0,\r\n            rep_comment     : [],\r\n        },\r\n        {\r\n            id_reputation   : 4,\r\n            id_user         : 4,\r\n            rep_positive    : 0,\r\n            rep_negative    : 0,\r\n            rep_comment     : [],\r\n        },\r\n        {\r\n            id_reputation   : 5,\r\n            id_user         : 5,\r\n            rep_positive    : 0,\r\n            rep_negative    : 0,\r\n            rep_comment     : [],\r\n        }\r\n    ]\r\n\r\n\r\n    getReputationOfOneUser(id_user : number){\r\n        for (var i=0 ; i < this.repList.length ; i++){\r\n                if (this.repList[i][\"id_user\"] == id_user) {\r\n                    return this.repList[i];\r\n                }\r\n        }\r\n    }\r\n    initReputation(id_user : number){\r\n        const newID =  this.repList[this.repList.length - 1].id_reputation + 1;\r\n        this.repList.push({\r\n            id_reputation   : newID,\r\n            id_user         : id_user,\r\n            rep_positive    : 0,\r\n            rep_negative    : 0,\r\n            rep_comment     : [],\r\n        })\r\n    }\r\n\r\n    addPositive(id: number){\r\n         for (var i=0 ; i < this.repList.length ; i++){\r\n                if (this.repList[i][\"id_user\"] == id) {\r\n                    this.repList[i][\"rep_positive\"] = this.repList[i][\"rep_positive\"] + 1;\r\n                }\r\n        }\r\n    }\r\n    \r\n    setNegative(id: number){\r\n        for (var i=0 ; i < this.repList.length ; i++){\r\n                 if (this.repList[i][\"id_user\"] == id) {\r\n                     this.repList[i][\"rep_negative\"] = this.repList[i][\"rep_positive\"] + 1;\r\n                 }\r\n         }        \r\n    }\r\n\r\n    setNewComment(id:number,id_from:number, comment:string){\r\n        for (var i=0 ; i < this.repList.length ; i++){\r\n                 if (this.repList[i][\"id_user\"] == id) {\r\n                     this.repList[i][\"rep_comment\"].push(\r\n                         {\r\n                            id_user_from: id_from,\r\n                            comment: comment\r\n                         }\r\n                     );\r\n                 }\r\n         }\r\n    }\r\n}","import { UsersModel } from './models/user.model';\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class UsersService {\r\n    private current_session : UsersModel = {             // empty because at first USER is not Logged IN! \r\n        id_user         : -1,       // later we are going to use this to put current logged in user\r\n        fname           : \"\",       // to simulate the SESSION on the backend\r\n        lname           : \"\",\r\n        contact_email   : \"\",\r\n        contact_phone   : \"\",\r\n        contact_address : \"\",\r\n        password        : \"\",\r\n        acc_type        : 'passenger'\r\n    }\r\n    /// setting userList---------------------------------------------------------------------------------\r\n    private userList : Array<UsersModel> = [\r\n        {\r\n            id_user         : 1,\r\n            fname           : \"Jeremiah\",\r\n            lname           : \"Riley\",\r\n            contact_email   : \"jeremiah@example.com\",\r\n            contact_phone   : \"0123456789\",\r\n            contact_address : \"2014 Public Works Drive Chattanooga, TN 37421\",\r\n            password        : \"secret\",\r\n            acc_type        : 'passenger'\r\n        } , \r\n        {\r\n            id_user         : 2,\r\n            fname           : \"Pam\",\r\n            lname           : \"Smith\",\r\n            contact_email   : \"pam.pSmith@example.com\",\r\n            contact_phone   : \"0123456789\",\r\n            contact_address : \"3246 Boring Lane Inverness, CA 94937\",\r\n            password        : \"secret\",\r\n            acc_type        : 'driver'\r\n        } , \r\n        {\r\n            id_user         : 3,\r\n            fname           : \"John\",\r\n            lname           : \"Dusek\",\r\n            contact_email   : \"johnn@example.com\",\r\n            contact_phone   : \"0123456789\",\r\n            contact_address : \"3762 Briarwood Drive Camden, NJ 08102\",\r\n            password        : \"secret\",\r\n            acc_type        : 'passenger'\r\n        } , \r\n        {\r\n            id_user         : 4,\r\n            fname           : \"Jared\",\r\n            lname           : \"Leighton\",\r\n            contact_email   : \"jaredd@example.com\",\r\n            contact_phone   : \"0123456789\",\r\n            contact_address : \"60 Pheasant Ridge Road Philadelphia, PA 19103\",\r\n            password        : \"secret\",\r\n            acc_type        : 'driver'\r\n        } , \r\n        {\r\n            id_user         : 5,\r\n            fname           : \"Ingrid\",\r\n            lname           : \"Monsen\",\r\n            contact_email   : \"imonsen@example.com\",\r\n            contact_phone   : \"0123456789\",\r\n            contact_address : \"Serenade Opus 108 9700 Volkegem\",\r\n            password        : \"secret\",\r\n            acc_type        : 'passenger'\r\n        } , \r\n    ]\r\n    /// end userList---------------------------------------------------------------------------------\r\n    //---------------------------------- getuserList -------------------------------------------------\r\n    getuserList() {\r\n        return this.userList;\r\n    }\r\n    //---------------------------------- getCurrenSession ----------------------------------------------\r\n    getCurrenSession(){\r\n        return this.current_session;\r\n    }\r\n    setCurrenSession(current_session_in : UsersModel){\r\n        this.current_session = current_session_in;\r\n    }\r\n    //---------------------------------- getProfileData -------------------------------------------------\r\n    getProfileData(id_user : number){\r\n        for (var i=0 ; i < this.userList.length ; i++){\r\n                if (this.userList[i][\"id_user\"] == id_user) {\r\n                    return this.userList[i];\r\n                }\r\n            }\r\n        // TODO return reputation and comments as well\r\n    }\r\n    //---------------------------------- setUser --------------------------------------------------------\r\n    addUser(\r\n        in_fname:string,\r\n        in_lname:string,\r\n        in_contact_email:string,\r\n        in_contact_phone:string,\r\n        in_contact_address:string,\r\n        in_password:string,\r\n        in_acc_type:string,){            \r\n            const newID =  this.userList[this.userList.length - 1].id_user + 1;\r\n            this.userList.push({\r\n                id_user         : newID,\r\n                fname           : in_fname,\r\n                lname           : in_lname,\r\n                contact_email   : in_contact_email,\r\n                contact_phone   : in_contact_phone,\r\n                contact_address : in_contact_address,\r\n                password        : in_password,\r\n                acc_type        : in_acc_type == 'driver'? 'driver' : 'passenger'\r\n            }); // end push;\r\n            return newID;\r\n        } //end setUser;\r\n    //---------------------------------- doesEmailExists ------------------------------------------\r\n    doesEmailExists(email_in:string){\r\n        for (var i=0 ; i < this.userList.length ; i++){\r\n                if (this.userList[i][\"contact_email\"] == email_in) {\r\n                    return true;\r\n                }\r\n        }\r\n        return false;\r\n    }\r\n    //---------------------------------- validateLogin ----------------------------------------------\r\n    validateLogin(email_in:string, pwd_in : string) {\r\n        for (var i=0 ; i < this.userList.length ; i++){\r\n            if (this.userList[i][\"contact_email\"] == email_in && this.userList[i][\"password\"] == pwd_in  ) {\r\n                this.setCurrenSession(this.userList[i]);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    } // validateLogin end;\r\n    //---------------------------------- updateUser ----------------------------------------------\r\n    updateUser(in_model:UsersModel) {\r\n        for (var i=0 ; i < this.userList.length ; i++){\r\n                if (this.userList[i][\"id_user\"] == in_model.id_user) {\r\n                    this.userList[i] = in_model;\r\n                }\r\n        }\r\n    }\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}